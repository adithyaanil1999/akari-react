{"version":3,"sources":["global.ts","components/login/login.tsx","reducers/actions.tsx","components/home/home.tsx","components/bookmarks/bookmarks.tsx","components/dashboard/dashboard.tsx","components/settings/settings.tsx","components/history/history.tsx","components/genre/genre.tsx","components/aboutManga/aboutManga.tsx","components/reader/reader.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","reducers/index.tsx","index.tsx","configureStore.tsx"],"names":["backendUrl","scaperUrl","LoginComponent","props","isMobile","require","md5","loginWrap","useRef","formWrap","toggleWrap","toggleSlider","signUpBtnWrap","loginBtnWrap","loginUsername","loginPassword","loginErrorMessage","signUpUsername","signUpPassword","signUpConfirmPassword","signUpErrorMessage","_useState","useState","_useState2","Object","slicedToArray","toggleBtnState","toggleBtnNewState","_useState3","_useState4","isSigningIn","toggleIsSigningIn","handleSignIn","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","username","password","wrap","_context","prev","next","stopPropagation","current","value","length","innerHTML","fetch","method","headers","Content-type","credentials","body","JSON","stringify","sent","ok","verifyTokens","t0","stop","_x","apply","this","arguments","handleSignUp","_ref2","_callee2","response","_context2","test","json","result","_x2","useEffect","addEventListener","setTimeout","style","display","react_default","createElement","className","src","process","ref","concat","type","placeholder","onClick","transform","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","color","action_add_about_manga_object","aboutMangaObj","state","action_add_dashboard_object","action_current_src","action_add_genre_object","genreObj","action_add_genre_search_object","genreSearchObj","action_update_genre_search_scroll_tick","scrollTick","action_update_genre_page_no","pageNo","action_update_selected_genre","selectGenre","action_update_genre_sort","sort","connect","homeWrap","navMobile","posi","setposi","handleNav","position","store","dispatch","colorObj","keys","aboutMangaObject","currentLoc","location","pathname","includes","clearStoreAboutManga","getColors","background","bgColor","secondaryBgColor","e","MouseEvent","pageX","window","innerWidth","touch","targetTouches","preventDefault","getCurrentNavItemFromLocation","react_router","react_router_dom","to","highLightAccentColor","accentColor","isComicBool","toggleIsComic","isBookMarkObjSet","setBookMarkObject","_useState5","_useState6","bookMarkObj","setBookMarkObj","_useState7","_useState8","bookMarkObjRead","setBookMarkObjRead","_useState9","_useState10","bookMarkObjNotRead","setBookMarkObjNotRead","_useState11","_useState12","showSpinner","toggleSpinner","_useState13","_useState14","showOnlySearched","toggleShowOnlySearch","_useState15","_useState16","searchObj","setSearchObj","srcObj","srcObject","bookMarkSearchInp","getUserBookmarks","jsonResp","readArr","unreadArr","i","unread_count","push","highLightBgColor","toggleMode","onKeyUp","val","tempArr","forEach","element","console","log","title","toLowerCase","map","key","openAboutPage","link","thumb_link","name","searchInp","searchBar","searchBody","featuredThumb","dashWarp","featuredWarp","isSearchOpen","toggleSearchOpen","isDashboardLoading","toggleDashboardLoader","dashboardItems","dashboardItemsLoader","isSearchBodyOpen","toggleSearchBodyOpen","isSearchResultsLoaded","toggleSearchResultsLoaded","searchItems","setSearchItems","handleSearchFocus","option","classList","add","remove","closeSearch","searchAnimationFunction","removeEventListener","getSearchDetails","maxItems","srcNo","srcArr","height","_args","undefined","searchArray","String","getDashBoardItems","currentSrc","skipChapterBool","backgroundImage","featuredItemInfo","thumb","dashBoardObject","onTransitionEnd","blur","transition","handleSearchInp","k","j","slice","desc","TrendingItems","item","index","newUpdates","popularItems","isLoggingOut","toggleIsLoggingOut","isLoading","toggleIsLoading","handleLogout","handleSrcChange","_x3","historyCont","isHistoryObjectLoaded","toggleIsHistoryObjectLoaded","historyObj","setHistoryObj","setTheme","getUserHistory","TimeSortedArr","getTimeSortedArray","arr","t1","t2","swap","index1","index2","temp","time_difference","hours","minutes","seconds","milliseconds","fontWeight","width","textAlign","marginTop","marginLeft","fontSize","top","left","GenreHeader","isGenreObjectLoaded","toggleGenreObjectLoaded","genreObject","setGenreObject","genreSearchObject","setGenreSearchObject","isGenreSearchObjectSet","toggleGenreSearchObject","selectedGenreArray","setSelectedGenreArr","isGenreLoadMoreFalse","toggleGenreLoadMore","_useState17","_useState18","prevScrollTick","setPrevScrollTick","_useState19","_useState20","lastLoadScrollTick","setLastLoadScrollTick","_useState21","_useState22","currentPageNo","setCurrentPageNo","_useState23","_useState24","stopLoad","toggleStopLoad","_useState25","_useState26","genreSort","setGenreSort","sortOption","getGenreObject","genreList","handleGenreSearch","_args2","page","genreArray","resultList","checkGenreInArr","selectedType","isTitleFoundFlag","include","defaultSort","scrollTo","genreSearchTick","behavior","genrePageNo","clearGenreSearch","sorts","defaultValue","onChange","onScroll","div","target","Math","floor","scrollHeight","clientHeight","scrollTop","parseInt","handleGenreScroll","check","simpleSelect","simpleGenreSelect","toConsumableArray","filter","addToSelectGenre","border","removeItemfromGenreArr","useLocation","navigate","useNavigate","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setAboutMangaObj","isDataLoaded","toggleIsDataLoaded","setState","isUserDataLoaded","toggleIsUserDataLoaded","dontBookmarkShowSpinner","toggleBookmarkSpinner","userDataObject","setUserDataObject","bgCont","aboutThumb","topBarBtn","mobileInnerContainer","aboutBottomCont","bookmarkBtn","readNowBtn","bookmarkSpinnerWrap","loadManga","getUserData","getDetails","decodeURIComponent","get","getSrcFromLink","openReader","url","params","thumbLink","chapterIndex","chapterList","createSearchParams","encodeURIComponent","mangaLink","currentChapterIndex","toString","alert","domain","handleBookMark","_ref3","_callee3","dataObj","_context3","_x4","isBookmarked","_ref4","_callee4","_context4","mangaInfo","_x5","goBack","author","status","fromCodePoint","chapterLink","chapterTitle","chapterDate","cookies","Cookies","imageList","setImageList","imageCount","setImageCount","isImagesLoaded","toggleIsImagesLoaded","isScrollingVertical","toggleScrollingVertical","menuTop","setMenuTop","topMenuTop","setTopMenuTop","isScrollTypeSet","setScrollType","setAboutMangaObject","isaboutMangaObjSet","toggleaboutMangaObjSet","_useState27","_useState28","isaboutMangaObjloaded","toggleaboutMangaObjloaded","_useState29","_useState30","setCurrentChapterIndex","_useState31","_useState32","isGetImageCalled","toggleGetImageCalled","_useState33","_useState34","isScrollTop","toggleIsScrollTop","_useState35","_useState36","currentImageCount","setCurrentImageCount","refArrayOfImages","currentImage","bottomMenu","topMenu","timer5ms","res","Promise","loadAboutManga","getMangaUrls","set","path","handleHorizontalScroll","message","preLoadImages","images","loadImages","imgArrSplitOne","imgArrSplitTwo","imgArr","imgArr2","_imgArr","resolve","reject","loadEach","img","Image","onload","onerror","err","loadNextChapter","loadPrevChapter","toggleReader","max","pop","handleScroll","_ref5","_callee5","getTopPercentage","currentTick","currentTop","newTop","_currentTop","_newTop","_currentTop2","_newTop2","_currentTop3","_newTop3","_maxTopTopMenu2","_currentTop4","_newTop4","_maxTopTopMenu3","_currentTop5","_newTop5","_context5","string","maxTopTopMenu","abrupt","_ref6","_callee6","maxRight","count","_count","_context6","_x6","_ref7","_callee7","_context7","opacity","isLoggedIn","toggleIsLoggedIn","isVerifyingLogin","toggleVerifyingLogin","isLoginVerified","toggleLoginVerify","isSrcSet","toggleIsSrcSet","isSrcObjectLoaded","toggleSrcObjectLoaded","isVerificationLoopSet","toggleVerificationLoop","fullScreenLoader","getSrc","resp","jsonResponse","srcObjResponse","getSrcObject","jsonResponseResult","document","cookie","replace","setInterval","alt","login_login","home_home","bookmarks_bookmarks","genre_genre","dashboard_dashboard","settings_settings","components_history_history","aboutManga_aboutManga","reader_reader","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","d","__webpack_exports__","src_store","createStore","composeWithDevTools","container","getElementById","createRoot","render","basename","es","src_App","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0107715c.chunk.js","sourcesContent":["export const backendUrl = \"https://akari-backend.herokuapp.com/\";\r\nexport const scaperUrl = \"https://manga-reader-express.herokuapp.com/\";","import React, {  Dispatch,useRef,useEffect,useState, FunctionComponent } from 'react';\nimport './login.css';\nimport {backendUrl}  from '../../global';\n\n\ninterface LoginProps {\n    verifyTokens: ()=> Promise<void> ;\n    isLoginVerified: React.SetStateAction<boolean>;\n}\n\nconst LoginComponent: FunctionComponent<LoginProps> = (props:LoginProps) => {\n\n    const isMobile = require('is-mobile');\n    const md5 = require('md5');\n\n    const loginWrap = useRef<HTMLDivElement>(null);\n    const formWrap = useRef<HTMLDivElement>(null);\n    const toggleWrap = useRef<HTMLDivElement>(null);\n    const toggleSlider = useRef<HTMLDivElement>(null);\n    const signUpBtnWrap = useRef<HTMLDivElement>(null);\n    const loginBtnWrap = useRef<HTMLDivElement>(null);\n    const loginUsername = useRef<HTMLInputElement>(null);\n    const loginPassword = useRef<HTMLInputElement>(null);\n    const loginErrorMessage = useRef<HTMLSpanElement>(null);\n\n    const signUpUsername = useRef<HTMLInputElement>(null);\n    const signUpPassword = useRef<HTMLInputElement>(null);\n    const signUpConfirmPassword = useRef<HTMLInputElement>(null);\n    const signUpErrorMessage = useRef<HTMLSpanElement>(null);\n\n    // state variables\n    let [toggleBtnState,toggleBtnNewState] = useState<React.SetStateAction<string>>(\"login\");\n    let [isSigningIn,toggleIsSigningIn] = useState<React.SetStateAction<boolean>>(false);\n\n\n    function checkLoginWrapAnimationEnd(){ \n        // Check if loginWarpper animation has ended then add change display of child divs (on mobile only)\n        if (loginWrap.current) {    \n            if(isMobile() == true){\n                loginWrap.current.addEventListener('animationend',()=>{\n                    setTimeout(() => {\n                        if (toggleWrap.current && formWrap.current){\n                            formWrap.current.style.display = \"flex\";\n                            toggleWrap.current.style.display = \"flex\";\n                        }\n                    }, 100);\n                })\n            }else{\n                if (toggleWrap.current && formWrap.current){\n                    formWrap.current.style.display = \"flex\";\n                    toggleWrap.current.style.display = \"flex\";\n                }\n            }\n            \n        }\n    };\n\n    //functions to toggle between SignUp and login\n\n    const toggleLogin = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.stopPropagation();\n        if(toggleBtnState !== \"login\"){\n            toggleBtnNewState(\"login\")\n\n            if(toggleSlider.current && loginBtnWrap.current && signUpBtnWrap.current){\n                toggleSlider.current.style.transform = \"translate(0%)\";\n                toggleSlider.current.style.borderTopLeftRadius = \"20px\";\n                toggleSlider.current.style.borderBottomLeftRadius = \"20px\";\n                toggleSlider.current.style.borderTopRightRadius = \"0px\";\n                toggleSlider.current.style.borderBottomRightRadius = \"0px\";\n                loginBtnWrap.current.style.color = \"black\";\n                signUpBtnWrap.current.style.color = \"white\";\n            }\n        }\n    }\n\n    const toggleSignUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.stopPropagation();\n        if(toggleBtnState !== \"signUp\"){\n            toggleBtnNewState(\"signUp\")\n            if(toggleSlider.current && loginBtnWrap.current && signUpBtnWrap.current){\n                toggleSlider.current.style.transform = \"translate(100%)\";\n                toggleSlider.current.style.borderTopLeftRadius = \"0px\";\n                toggleSlider.current.style.borderBottomLeftRadius = \"0px\";\n                toggleSlider.current.style.borderTopRightRadius = \"20px\";\n                toggleSlider.current.style.borderBottomRightRadius = \"20px\";\n                loginBtnWrap.current.style.color = \"white\";\n                signUpBtnWrap.current.style.color = \"black\";\n            }\n        }\n    }\n\n    const handleSignIn = async (event: React.MouseEvent<HTMLButtonElement>) =>{\n        event.stopPropagation();\n        if(isSigningIn === false){\n            toggleIsSigningIn(true);\n            if(loginUsername.current && loginPassword.current && loginErrorMessage.current){\n                //validation checks\n\n                const username = loginUsername.current.value;\n                const password = loginPassword.current.value;\n\n                //check username and password is empty\n\n                if (username.length === 0 || password.length === 0 ){\n                    loginErrorMessage.current.innerHTML = \"Fields cannot be empty\";\n                    toggleIsSigningIn(false);\n                }else if((username.length < 6 && username.length <= 36) || (password.length < 9 && password.length > 100)){\n                    loginErrorMessage.current.innerHTML = \"Invalid username and password\";\n                    toggleIsSigningIn(false);\n                }else{\n                    loginErrorMessage.current.innerHTML = \"\";\n                    // Login Request\n                    try{\n                        const response = await fetch(backendUrl+'login',{\n                            method: 'POST',\n                            headers:{\n                                'Content-type': 'application/json'\n                            },\n                            credentials:'include',\n                            body: JSON.stringify({\n                                'username': username,\n                                'password': md5(password)\n                            })\n                        })\n        \n                        if(response.ok){\n                            toggleIsSigningIn(false);\n                            props.verifyTokens();\n                    \n                        }else{\n                            toggleIsSigningIn(false);\n                            loginErrorMessage.current.innerHTML = \"User not Found\";\n                            \n                        }\n                    }catch(err){\n                        toggleIsSigningIn(false);\n                        loginErrorMessage.current.innerHTML = \"Failed to connect to server\";\n\n                    }\n                }\n            }\n        }\n    }\n\n    const handleSignUp = async (event: React.MouseEvent<HTMLButtonElement>) =>{\n        event.stopPropagation();\n        if(isSigningIn === false){\n            toggleIsSigningIn(true);\n            if(signUpUsername.current && signUpPassword.current && signUpConfirmPassword.current && signUpErrorMessage.current){\n                //validation checks\n\n                const username = signUpUsername.current.value;\n                const password = signUpPassword.current.value;\n\n                //check username and password is empty\n\n                if (username.length === 0 || password.length === 0 ){\n                    signUpErrorMessage.current.innerHTML = \"Fields cannot be empty\";\n                    toggleIsSigningIn(false);\n                }else if (!(username.length < 6 || username.length <= 36)){\n                    signUpErrorMessage.current.innerHTML = \"Username must contain atleast 6 and atmost 36 characters\";\n                    toggleIsSigningIn(false);\n                }else if(/^[A-Za-z0-9_]*$/.test(username) === false){\n                    signUpErrorMessage.current.innerHTML = \"Username must only contain letters,numbers or underscore\";\n                    toggleIsSigningIn(false);\n                }else if(password.length < 9 || password.length > 100){\n                    signUpErrorMessage.current.innerHTML = \"Password length must be between 8 and 100\";\n                    toggleIsSigningIn(false);\n                }else{\n                    signUpErrorMessage.current.innerHTML = \"\";\n                    // signUp Request\n\n                    try{\n                        const response = await fetch(backendUrl+'signUp',{\n                            method: 'POST',\n                            credentials:'include',\n                            headers:{\n                                'Content-type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                'username': username,\n                                'password': md5(password)\n                            })\n                        })\n        \n                        if(response.ok){\n                            toggleIsSigningIn(false);\n                            const jsonResponse = await response.json();\n                            //handle JWT token storage;\n                            props.verifyTokens(); \n                        }else{\n                            toggleIsSigningIn(false);\n                            const jsonResponse = await response.json();\n                            if(jsonResponse.result === \"USER_EXISTS\"){\n                                signUpErrorMessage.current.innerHTML = \"Username already exists.\"\n                            }\n                        }\n                    }catch(err){\n                        toggleIsSigningIn(false);\n                        signUpErrorMessage.current.innerHTML = \"Failed to connect to server\";\n\n                    }\n                }\n            }\n        }\n    }\n\n    useEffect(() => {\n        checkLoginWrapAnimationEnd()\n    });\n\n    return (\n        <div className=\"login-wrap\">\n            <div className=\"logo-wrap\">\n                <img src={process.env.REACT_APP_PUBLIC_URL +\"/static/akari_white_icon.png\"}/>\n                <h1>Akari</h1>\n            </div>\n            <div ref={loginWrap} className=\"login-form-wrap\">\n                <div ref={formWrap} className=\"form-wrap\">\n                    <div className={`form-inner-wrap ${toggleBtnState === \"login\" ?\"flex\": \"none\" }`}>\n                        <input ref={loginUsername} className='form-input' type=\"text\" placeholder='Username' />\n                        <input ref={loginPassword} className='form-input' type=\"password\" placeholder='Password' />\n                        <button onClick={handleSignIn} className=\"form-btn\">\n                            <span>Login Into Your Account</span>\n                            <div className=\"form-btn-icon-wrap\">\n                                { isSigningIn ? \n                                    <div className=\"spinner\">\n                                        <div className=\"double-bounce1\"></div>\n                                        <div className=\"double-bounce2\"></div>\n                                    </div>\n                                    :\n                                    <span className=\"material-icons\">arrow_forward</span>\n                                }\n                            </div>\n                        </button>\n                        <span ref={loginErrorMessage} className=\"form-error-message\"></span>\n                    </div>\n                    <div className={`form-inner-wrap signUp-form ${toggleBtnState !== \"login\" ?\"flex\": \"none\" }`}>\n                        <input ref={signUpUsername} className='form-input' type=\"text\" placeholder='Username' />\n                        <input ref={signUpPassword} className='form-input' type=\"password\" placeholder='Password' />\n                        <input ref={signUpConfirmPassword} className='form-input' type=\"password\" placeholder='Confirm Password' />\n                        <button onClick={handleSignUp} className=\"form-btn\">\n                            <span>Create Your Account</span>\n                            <div className=\"form-btn-icon-wrap\">\n                                { isSigningIn ? \n                                    <div className=\"spinner\">\n                                        <div className=\"double-bounce1\"></div>\n                                        <div className=\"double-bounce2\"></div>\n                                    </div>\n                                    :\n                                    <span className=\"material-icons\">arrow_forward</span>\n                                }\n                            </div>\n                        </button>\n                        <span ref={signUpErrorMessage} className=\"form-error-message\"></span>\n                    </div>\n                </div>\n                <div ref={toggleWrap} className=\"toggle-wrap\">\n                    <div className=\"toggle-inner-wrap\">\n                        <div className=\"slider-wrap\">\n                            <div ref={toggleSlider} className=\"toggle-slider\"/>\n                        </div>\n                        <div ref={loginBtnWrap} onClick={toggleLogin} className=\"login-btn-wrap\">\n                            <h3>Login</h3>\n                        </div>\n                        <div ref={signUpBtnWrap} onClick={toggleSignUp} className=\"signUp-btn-wrap\">\n                            <h3>Sign Up</h3>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n  \n  export default LoginComponent;\n  ","export function action_add_about_manga_object(aboutMangaObj:any) {\r\n    return {\r\n        type: 'ADD_ABOUT_MANGA_OBJECT',\r\n        state: aboutMangaObj\r\n    }\r\n}\r\n\r\nexport function action_add_dashboard_object(aboutMangaObj:any) {\r\n    return {\r\n        type: 'ADD_DASHBOARD_OBJECT',\r\n        state: aboutMangaObj\r\n    }\r\n}\r\n\r\nexport function action_add_src_object(srcObj:any) {\r\n    return {\r\n        type: 'ADD_SRC_OBJECT',\r\n        state: srcObj\r\n    }\r\n}\r\n\r\nexport function action_current_src(src:string) {\r\n    return {\r\n        type: 'CURRENT_SRC',\r\n        state: src\r\n    }\r\n}\r\n\r\nexport function action_add_genre_object(genreObj:any) {\r\n    return {\r\n        type: 'ADD_GENRE_OBJECT',\r\n        state: genreObj\r\n    }\r\n}\r\n\r\nexport function action_add_genre_search_object(genreSearchObj:any) {\r\n    return {\r\n        type: 'ADD_GENRE_SEARCH_OBJECT',\r\n        state: genreSearchObj\r\n    }\r\n}\r\n\r\nexport function action_update_genre_search_scroll_tick(scrollTick:number) {\r\n    return {\r\n        type: 'UPDATE_GENRE_SEARCH_SCROLL_TICK',\r\n        state: scrollTick\r\n    }\r\n}\r\n\r\nexport function action_update_genre_page_no(pageNo:number) {\r\n    return {\r\n        type: 'UPDATE_GENRE_PAGE_NO',\r\n        state: pageNo\r\n    }\r\n}\r\n\r\nexport function action_update_selected_genre(selectGenre:any) {\r\n    return {\r\n        type: 'UPDATE_SELECTED_GENRE',\r\n        state: selectGenre\r\n    }\r\n}\r\n\r\nexport function action_update_genre_sort(sort:string) {\r\n    return {\r\n        type: 'UPDATE_GENRE_SORT',\r\n        state: sort\r\n    }\r\n}","import React, { useReducer,FunctionComponent,useRef,useEffect,useState} from 'react';\r\nimport { Link, Outlet } from 'react-router-dom';\r\nimport './home.css';\r\nimport { store } from '../../index';\r\nimport { connect } from 'react-redux';\r\nimport { action_update_genre_sort, action_add_genre_search_object, action_add_about_manga_object, action_update_genre_page_no, action_update_genre_search_scroll_tick, action_update_selected_genre } from '../../reducers/actions';\r\n\r\n\r\n\r\ninterface HomeProps {\r\n    verifyTokens: ()=> Promise<void> ;\r\n    isLoginVerified: React.SetStateAction<boolean>;\r\n    getColors: any;\r\n} \r\n\r\nconst HomeComponent: FunctionComponent<HomeProps> = (props:any) => {\r\n\r\n    const isMobile = require('is-mobile');\r\n    const homeWrap = useRef<HTMLDivElement>(null);\r\n    const navMobile = useRef<HTMLDivElement>(null);\r\n\r\n    let [posi, setposi] = useState<React.SetStateAction<number>>(3);\r\n\r\n    const handleNav = (event: React.MouseEvent<HTMLAnchorElement>,position:number) => {\r\n        // function handling nav item hightlighting and navigation\r\n        event.stopPropagation();\r\n        setposi(position);\r\n        // reset genre search Obj\r\n        store.dispatch(action_add_genre_search_object({}));\r\n        store.dispatch(action_update_genre_page_no(0));\r\n        store.dispatch(action_update_genre_search_scroll_tick(0));\r\n        store.dispatch(action_update_selected_genre([]));\r\n        store.dispatch(action_update_genre_sort(\"default\"));\r\n\r\n\r\n    }\r\n\r\n    const clearStoreAboutManga = () =>{\r\n        //clears redux store for about manga\r\n        let currentLoc = location.pathname;\r\n        if(currentLoc.includes('dashboard') || currentLoc.includes('history') || currentLoc.includes('genre') || currentLoc.includes('bookmarks'))\r\n            store.dispatch(action_add_about_manga_object({}));\r\n    }\r\n\r\n    const preventDefaultNav = () =>{\r\n        if(homeWrap.current){\r\n            homeWrap.current.addEventListener('touchstart',(e: MouseEvent|TouchEvent)=>{\r\n                if (e instanceof MouseEvent) {\r\n                    if (e.pageX > 30 && e.pageX < window.innerWidth - 30) return;\r\n                }else{\r\n                    let touch = e.targetTouches[0]\r\n                    if(touch.pageX > 30 && touch.pageX < window.innerWidth - 30) return;\r\n                }\r\n                // prevent swipe to navigate back gesture\r\n                e.preventDefault();\r\n            });\r\n        }\r\n    }\r\n\r\n    const getCurrentNavItemFromLocation = ()=>{\r\n        let currentLoc = location.pathname;\r\n        if(currentLoc.includes('bookmarks')){\r\n            setposi(1);\r\n        }else if(currentLoc.includes('history')){\r\n            setposi(2);\r\n        }else if(currentLoc.includes('dashboard')){\r\n            setposi(3);\r\n        }else if(currentLoc.includes('genre')){\r\n            setposi(4);\r\n        }else if(currentLoc.includes('settings')){\r\n            setposi(5);\r\n        }\r\n    }\r\n\r\n    const applyColors = (colorObj:any) =>{\r\n        if(homeWrap.current && navMobile.current){\r\n            homeWrap.current.style.background = colorObj.bgColor;\r\n            navMobile.current.style.background = colorObj.secondaryBgColor;\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(Object.keys(props.aboutMangaObject).length !== 0){\r\n            clearStoreAboutManga();\r\n        }\r\n        applyColors(props.getColors);\r\n        preventDefaultNav();\r\n        getCurrentNavItemFromLocation();\r\n    })\r\n    return (\r\n        <div ref={homeWrap} className=\"home-component-wrap\">\r\n            <div className=\"home-container\">\r\n                <Outlet/>\r\n            </div>\r\n            {\r\n                 \r\n                <div ref={navMobile} className=\"nav-bar-mobile\">\r\n                    <Link to=\"/home/bookmarks\" style={{color : `${posi === 1 ? props.getColors.highLightAccentColor: props.getColors.accentColor}` }}  onClick = { (e) => handleNav(e,1)} className=\"nav-item\">\r\n                        <span className=\"material-symbols-outlined nav-icon\">\r\n                            book\r\n                        </span>\r\n                        <span className=\"nav-title\">Libary</span>\r\n                    </Link>\r\n                    <Link to=\"/home/history\" style={{color : `${posi === 2 ? props.getColors.highLightAccentColor: props.getColors.accentColor}` }}  onClick = { (e) => handleNav(e,2)} className=\"nav-item\">\r\n                        <span className=\"material-symbols-outlined nav-icon\">\r\n                            history\r\n                        </span>\r\n                        <span className=\"nav-title\">History</span>\r\n                    </Link>\r\n                    <Link to=\"/home/dashboard\" style={{color : `${posi === 3 ? props.getColors.highLightAccentColor: props.getColors.accentColor}` }}   onClick = { (e) => handleNav(e,3)} className=\"nav-item\">\r\n                        <span className=\"material-symbols-outlined nav-icon\">\r\n                            dashboard\r\n                        </span>\r\n                        <span className=\"nav-title\">Dashboard</span>\r\n                    </Link>\r\n                    <Link to=\"/home/genre\" style={{color : `${posi === 4 ? props.getColors.highLightAccentColor: props.getColors.accentColor}` }}  onClick = { (e) => handleNav(e,4)} className=\"nav-item\">\r\n                        <span className=\"material-symbols-outlined nav-icon\">\r\n                            filter_alt\r\n                        </span>\r\n                        <span className=\"nav-title\">Genre</span>\r\n                    </Link>\r\n                    <Link to=\"/home/settings\" style={{color : `${posi === 5 ? props.getColors.highLightAccentColor: props.getColors.accentColor}` }}  onClick = { (e) => handleNav(e,5)} className=\"nav-item\">\r\n                        <span className=\"material-symbols-outlined\">\r\n                            settings\r\n                        </span>\r\n                        <span className=\"nav-title\">Settings</span>\r\n                        {\r\n                            isMobile()?null:\r\n                            <div className=\"nav-bottom-spacer\"/>\r\n                        }\r\n                    </Link>\r\n                </div>\r\n                \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state:any) {\r\n    return state;\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(HomeComponent);","import React, { FunctionComponent,useRef,useEffect,useState } from 'react';\r\nimport './bookmarks.css';\r\nimport { connect } from 'react-redux';\r\nimport {backendUrl}  from '../../global';\r\n\r\n\r\n\r\ninterface BookMarkProps {\r\n    getColors: any;\r\n    openAboutPage: (url:string) => void;\r\n}  \r\n\r\nconst BookmarkComponent: FunctionComponent <BookMarkProps> = (props:any) =>{\r\n\r\n    let [isComicBool,toggleIsComic] = useState<React.SetStateAction<boolean>>(false);\r\n    let [isBookMarkObjSet,setBookMarkObject] = useState<React.SetStateAction<boolean>>(false);\r\n    let [bookMarkObj,setBookMarkObj] = useState<React.SetStateAction<any>>([]);\r\n    let [bookMarkObjRead,setBookMarkObjRead] = useState<React.SetStateAction<any>>([]);\r\n    let [bookMarkObjNotRead,setBookMarkObjNotRead] = useState<React.SetStateAction<any>>([]);\r\n    let [showSpinner,toggleSpinner] = useState<React.SetStateAction<boolean>>(true);\r\n    let [showOnlySearched,toggleShowOnlySearch] = useState<React.SetStateAction<boolean>>(false);\r\n    let [searchObj,setSearchObj] = useState<React.SetStateAction<any>>([]);\r\n    \r\n    const srcObj = props.srcObject;\r\n    const bookMarkSearchInp = useRef<HTMLInputElement>(null);\r\n    useEffect(()=>{\r\n        if(isBookMarkObjSet === false){\r\n            // fetch bookmarks from backend\r\n            getUserBookmarks();\r\n            setBookMarkObject(true);\r\n        }\r\n\r\n    });\r\n    \r\n    const getUserBookmarks = async() =>{\r\n        const response = await fetch(backendUrl+'getUserBookmarks',{\r\n            method: 'POST',\r\n            credentials:'include',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n        })\r\n\r\n        if(response){\r\n            let jsonResp = await response.json();\r\n            if(jsonResp.result === 0){\r\n                toggleSpinner(false);\r\n            }else{\r\n\r\n                let readArr = [];\r\n                let unreadArr = [];\r\n\r\n                for(let i = 0; i< jsonResp.result.length;i++){\r\n                    jsonResp.result[i].unread_count === 0 ? readArr.push(jsonResp.result[i]):unreadArr.push(jsonResp.result[i]); \r\n                }\r\n                setBookMarkObj(jsonResp.result);\r\n                setBookMarkObjRead(readArr);\r\n                setBookMarkObjNotRead(unreadArr);\r\n                toggleSpinner(false);\r\n            \r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    const toggleMode = (e:React.MouseEvent)=>{\r\n        e.stopPropagation();\r\n        if(isComicBool === true){\r\n            toggleIsComic(false);\r\n        }else{\r\n            toggleIsComic(true);\r\n        }\r\n    };\r\n\r\n    const handleBookmarkSearch = () =>{\r\n        if(bookMarkSearchInp.current){\r\n            const val = bookMarkSearchInp.current.value;\r\n            let tempArr:Array<any> = [];\r\n            if(val.length !== 0){\r\n                bookMarkObj.forEach((element:any) => {\r\n                    console.log(element.title.includes(val))\r\n                    if(element.title.toLowerCase().includes(val) === true){\r\n                        console.log(element.title)\r\n                        tempArr.push(element)\r\n                    }\r\n                });\r\n                setSearchObj(tempArr);\r\n                toggleShowOnlySearch(true)\r\n            }else{\r\n                setSearchObj([]);\r\n                toggleShowOnlySearch(false)\r\n            }   \r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"bookmark-wrap\">\r\n            <div style={{display:`${showSpinner?'flex':'None'}`}} className=\"bookmark-spinner-wrap\">\r\n                <div className=\"lds-roller\">\r\n                        <div>\r\n                        </div>\r\n                        <div>\r\n                        </div>\r\n                        <div>\r\n                        </div>\r\n                        <div>\r\n                        </div>\r\n                        <div>\r\n                        </div>\r\n                        <div>\r\n                        </div>\r\n                        <div>\r\n                        </div>\r\n                        <div>  \r\n                        </div>\r\n                        </div>\r\n            </div>\r\n            <div style={{display:`${bookMarkObj.length === 0?'flex':'None'}`,color: props.getColors.highLightBgColor}} className=\"bookmark-empty-wrap\">\r\n                <h1>You havent bookmarked anything, Yet.</h1>\r\n            </div>\r\n            {\r\n                bookMarkObj.length !== 0 ?\r\n                <div style={{display:`${showSpinner ?'None':'flex'}`}} className=\"bookmark-header-wrap\">\r\n                    <h1 style={{color: props.getColors.accentColor}}> Bookmarks</h1>\r\n                    <div className=\"bookmark-toggle-wrap\">\r\n                        <div style={{background: props.getColors.secondaryBgColor}} className=\"bookmark-toggle\">\r\n                            <div onClick={(e)=>toggleMode(e)} style={{ background: props.getColors.accentColor,  transform: `${isComicBool?'translateX(100%)':'translateX(10%)'}`}} className=\"bookmark-toggle-icon-wrap\">\r\n                                <div style={{color: props.getColors.highLightAccentColor}}> \r\n                                        <span style={{display:`${isComicBool?'block':'None'}`}}>C</span>\r\n                                        <span style={{display:`${isComicBool?'None':'block'}`}}>M</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>:null\r\n            }\r\n            \r\n            <div style={{display:`${bookMarkObj.length !== 0?'flex':'None'}`}} className=\"bookmark-search-bar-wrap\">\r\n                <div style={{background:props.getColors.secondaryBgColor,color:props.getColors.accentColor}} className=\"search-bar\">\r\n                    <div className=\"search-icon-wrap\">\r\n                        <span className=\"material-symbols-outlined\">\r\n                            search\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"search-input-wrap \">\r\n                        <input onKeyUp={handleBookmarkSearch} ref={bookMarkSearchInp}type=\"text\" placeholder=\"Search Bookmarks\" className=\"search-input\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{display:`${showSpinner?'None':'flex'}`}} className=\"bookmark-body-wrap\">  \r\n                {\r\n                    showOnlySearched?\r\n                    searchObj.map((e:any,i:number)=>{\r\n                        return <div key={i} className=\"bookmark-item-wrap\">\r\n                                    <div onClick={()=>props.openAboutPage(e.link)} style={{background:`linear-gradient(rgb(94 94 94 / 14%), rgb(4 4 4 / 96%)),url(${e.thumb_link})`}} className=\"bookmark-thumb-wrap\">\r\n                                        <span style={{color:props.getColors.accentColor}}>\r\n                                            {e.title}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"bookmark-src-title-wrap\">\r\n                                        <span style={{color:props.getColors.accentColor}}>\r\n                                            {srcObj[e.src].name}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div style={{background:props.getColors.highLightBgColor}} className=\"bookmark-under-counter-wrap\">\r\n                                        <span style={{color:props.getColors.highLightAccentColor}}>\r\n                                            {e.unread_count}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                    }):\r\n                    Object.keys(srcObj).length !== 0 ?\r\n                    bookMarkObjNotRead.map((e:any,i:number)=>{\r\n                        if(isComicBool === false){\r\n                            if(Object.keys(srcObj).includes(e.src) && srcObj[e.src].type === 'manga'){\r\n                                return <div key={i} className=\"bookmark-item-wrap\">\r\n                                    <div onClick={()=>props.openAboutPage(e.link)} style={{background:`linear-gradient(rgb(94 94 94 / 14%), rgb(4 4 4 / 96%)),url(${e.thumb_link})`}} className=\"bookmark-thumb-wrap\">\r\n                                        <span style={{color:props.getColors.accentColor}}>\r\n                                            {e.title}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"bookmark-src-title-wrap\">\r\n                                        <span style={{color:props.getColors.accentColor}}>\r\n                                            {srcObj[e.src].name}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div style={{background:props.getColors.highLightBgColor}} className=\"bookmark-under-counter-wrap\">\r\n                                        <span style={{color:props.getColors.highLightAccentColor}}>\r\n                                            {e.unread_count}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        }else{\r\n                            if(Object.keys(srcObj).includes(e.src) && srcObj[e.src].type !== 'manga'){\r\n                                return <div key={i} className=\"bookmark-item-wrap\">\r\n                                    <div onClick={()=>props.openAboutPage(e.link)} style={{background:`linear-gradient(rgb(94 94 94 / 14%), rgb(4 4 4 / 96%)),url(${e.thumb_link})`}} className=\"bookmark-thumb-wrap\">\r\n                                        <span style={{color:props.getColors.accentColor}}>\r\n                                            {e.title}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"bookmark-src-title-wrap\">\r\n                                        <span style={{color:props.getColors.accentColor}}>\r\n                                            {srcObj[e.src].name}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div style={{background:props.getColors.highLightBgColor}} className=\"bookmark-under-counter-wrap\">\r\n                                        <span style={{color:props.getColors.highLightAccentColor}}>\r\n                                            {e.unread_count}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        }\r\n                    }):null\r\n                }\r\n                {\r\n                    Object.keys(srcObj).length !== 0 && showOnlySearched === false  ?\r\n                    bookMarkObjRead.map((e:any,i:number)=>{\r\n                        if(isComicBool === false){\r\n                            if(Object.keys(srcObj).includes(e.src) && srcObj[e.src].type === 'manga'){\r\n                                return <div key={i} className=\"bookmark-item-wrap\">\r\n                                    <div onClick={()=>props.openAboutPage(e.link)} style={{background:`linear-gradient(rgb(94 94 94 / 14%), rgb(4 4 4 / 96%)),url(${e.thumb_link})`}} className=\"bookmark-thumb-wrap\">\r\n                                        <span style={{color:props.getColors.accentColor}}>\r\n                                            {e.title}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"bookmark-src-title-wrap\">\r\n                                        <span style={{color:props.getColors.accentColor}}>\r\n                                            {srcObj[e.src].name}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        }else{\r\n                            if(Object.keys(srcObj).includes(e.src) && srcObj[e.src].type !== 'manga'){\r\n                                return <div key={i} className=\"bookmark-item-wrap\">\r\n                                    <div onClick={()=>props.openAboutPage(e.link)} style={{background:`linear-gradient(rgb(94 94 94 / 14%), rgb(4 4 4 / 96%)),url(${e.thumb_link})`}} className=\"bookmark-thumb-wrap\">\r\n                                        <span style={{color:props.getColors.accentColor}}>\r\n                                            {e.title}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"bookmark-src-title-wrap\">\r\n                                        <span style={{color:props.getColors.accentColor}}>\r\n                                            {srcObj[e.src].name}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        }\r\n                    }):null\r\n                }\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state:any) {\r\n    return state;\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps)(BookmarkComponent);","import React, { FunctionComponent,useRef,useEffect,useState } from 'react';\r\nimport {scaperUrl} from '../../global';\r\nimport './dashboard.css';\r\nimport { action_add_dashboard_object } from '../../reducers/actions';\r\nimport { store } from '../../index';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface DashbordProps {\r\n    getColors: any;\r\n    openAboutPage: (url:string) => void\r\n} \r\n\r\n\r\nconst DashboardComponent: FunctionComponent<DashbordProps> = (props:any) =>{\r\n\r\n    const searchInp = useRef<HTMLInputElement>(null);\r\n    const searchBar = useRef<HTMLDivElement>(null);\r\n    const searchBody = useRef<HTMLDivElement>(null);\r\n    const featuredThumb = useRef<HTMLDivElement>(null);\r\n    const dashWarp = useRef<HTMLDivElement>(null);\r\n    const featuredWarp = useRef<HTMLDivElement>(null);\r\n\r\n\r\n    let [isSearchOpen,toggleSearchOpen] = useState<React.SetStateAction<boolean>>(false);\r\n    let [isDashboardLoading,toggleDashboardLoader] = useState<React.SetStateAction<boolean>>(true);\r\n    let [dashboardItems, dashboardItemsLoader] = useState<React.SetStateAction<any>>({});\r\n    let [isSearchBodyOpen, toggleSearchBodyOpen] = useState<React.SetStateAction<boolean>>(false);\r\n    let [isSearchResultsLoaded, toggleSearchResultsLoaded] = useState<React.SetStateAction<boolean>>(false);\r\n    let [searchItems, setSearchItems] = useState<React.SetStateAction<any>>([]);\r\n    \r\n\r\n    let searchTimer:any = false;\r\n    \r\n\r\n    const handleSearchFocus = (option:boolean) =>{\r\n        // Changes the width of the search bar\r\n        if(option){\r\n            if(searchBar.current){\r\n                searchBar.current.classList.add('isFocused');\r\n            }\r\n        }else{\r\n            if(searchBar.current){\r\n                searchBar.current.classList.remove('isFocused');\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    const handleOpenSearch = () =>{\r\n        if(isSearchOpen === true){\r\n            if(searchBody.current){\r\n                searchBody.current.style.display = 'flex';\r\n                searchBody.current.classList.add('slideDownSearch');\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeSearch = () =>{\r\n        const searchAnimationFunction = () =>{\r\n            if(searchBody.current && isSearchOpen === true){\r\n                searchBody.current.style.display = 'none';\r\n                searchBody.current.classList.remove('slideUpSearch');\r\n                handleSearchFocus(false);\r\n                toggleSearchOpen(false);\r\n                toggleSearchResultsLoaded(false);\r\n                searchBody.current.removeEventListener('animationend',searchAnimationFunction);\r\n            } \r\n        }\r\n        if(searchBody.current && isSearchOpen === true){\r\n            searchBody.current.classList.remove('slideDownSearch');\r\n            searchBody.current.classList.add('slideUpSearch');\r\n            searchBody.current.addEventListener('animationend',searchAnimationFunction)\r\n\r\n        }\r\n    }\r\n\r\n    const getSearchDetails = async(title:string,maxItems = 1) =>{\r\n        // get search items\r\n\r\n        const response = await fetch(scaperUrl+'search',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'title': title,\r\n                'maxItems': maxItems,\r\n                'type': 'manga'\r\n            })\r\n        });\r\n\r\n        if(response.ok){\r\n            const jsonResp = await response.json();\r\n            if(jsonResp){\r\n                // get sources and adjust height to max\r\n                const maxHeight = 80;\r\n                let srcNo = 0;\r\n                let srcArr:Array<any> = [];\r\n                \r\n\r\n                jsonResp.searchArray.forEach((element:any) => {\r\n                    if(srcArr.includes(element.src) === false){\r\n                        srcArr.push(element.src);\r\n                        srcNo++;\r\n                    }\r\n                });\r\n\r\n                const height =  srcNo === 0? \"26\" :srcNo*5 >= 80 ? \"80\": String(srcNo*30);\r\n                console.log(jsonResp.searchArray)\r\n                searchBody.current?searchBody.current.style.height = height+ `vh`: null;\r\n                setSearchItems(jsonResp.searchArray);\r\n                toggleSearchResultsLoaded(true)\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const handleSearchInp = (e:React.KeyboardEvent) =>{\r\n       \r\n        if(searchInp.current && searchBody.current){\r\n            const val = searchInp.current.value;\r\n            if(e.key === 'Enter'){\r\n                \r\n                searchInp.current.blur();\r\n                //extend search\r\n                searchBody.current.style.height = '80vh';\r\n                searchBody.current.style.transition = 'height 0.5s';\r\n                toggleSearchBodyOpen(true);\r\n                getSearchDetails(val,20);\r\n                // toggleSearchSpinner\r\n            }else{\r\n                searchBody.current.style.height = '5vh';\r\n                toggleSearchBodyOpen(false);\r\n                \r\n            }\r\n            if(val.length > 0){\r\n                handleSearchFocus(true);\r\n                toggleSearchOpen(true);\r\n            }else{\r\n                //close search body\r\n                searchInp.current.blur();\r\n                toggleSearchBodyOpen(false);\r\n                closeSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    const getDashBoardItems = async () =>{\r\n        // POST CALL FOR dashboard items\r\n\r\n\r\n        const response = await fetch(scaperUrl+'dashboardItems',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'src': props.currentSrc,\r\n                'skipChapterBool': true\r\n            })\r\n        });\r\n\r\n        if(response.ok){\r\n            const jsonResp = await response.json();\r\n            if(jsonResp){\r\n                toggleDashboardLoader(false);\r\n                dashboardItemsLoader(jsonResp);\r\n                store.dispatch(action_add_dashboard_object(jsonResp));\r\n                setTimeout(()=>{\r\n                    if(featuredThumb.current){\r\n                        featuredThumb.current.style.backgroundImage=`linear-gradient(rgb(94 94 94 / 14%), rgb(28 28 28 / 74%)),url(${jsonResp.featuredItemInfo.thumb})`\r\n                    }\r\n                },10)\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const setColors = (colorObj:any) =>{\r\n        // sets color scheme\r\n        if(dashWarp.current && searchBar.current && featuredWarp.current && searchBody.current){\r\n            dashWarp.current.style.color = colorObj.accentColor;\r\n            searchBar.current.style.background = colorObj.secondaryBgColor;\r\n            searchBody.current.style.background = colorObj.secondaryBgColor;\r\n            featuredWarp.current.style.background = colorObj.secondaryBgColor;\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        \r\n        setColors(props.getColors);\r\n        if(isDashboardLoading === true && props.currentSrc.length !==0){\r\n            if(Object.keys(props.dashBoardObject).length !== 0){\r\n                dashboardItemsLoader(props.dashBoardObject);\r\n                toggleDashboardLoader(false);\r\n                setTimeout(()=>{\r\n                    if(featuredThumb.current){\r\n                        featuredThumb.current.style.backgroundImage=`linear-gradient(rgb(94 94 94 / 14%), rgb(28 28 28 / 74%)),url(${props.dashBoardObject.featuredItemInfo.thumb})`\r\n                    }\r\n                },10)\r\n            }else{\r\n                getDashBoardItems();\r\n            }\r\n        }\r\n    });\r\n\r\n    \r\n\r\n    return(\r\n        <div ref={dashWarp} className=\"dashboard-wrap\">\r\n            {isSearchOpen? <div className=\"dash-blur\"/>:null}\r\n            <div className=\"search-wrap\">\r\n                <div  onTransitionEnd={handleOpenSearch} ref={searchBar} className=\"search-bar\">\r\n                    <div className=\"search-icon-wrap\">\r\n                        <span className=\"material-symbols-outlined\">\r\n                            search\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"search-input-wrap \">\r\n                        <input  ref={searchInp} onKeyUp={(e)=>handleSearchInp(e)} type=\"text\" placeholder=\"Search\" className=\"search-input\"/>\r\n                    </div>\r\n                </div>\r\n                <div ref={searchBody} className=\"search-body\">\r\n                    <div style={{display:`${isSearchBodyOpen?'flex':'None'}`}} className=\"search-body-inner-wrap\">\r\n                        <div style={{display:`${isSearchResultsLoaded?'None':'flex'}`}} className=\"search-loader-wrap\">\r\n                                <div className=\"lds-roller\">\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>  \r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                        <div style={{display:`${isSearchResultsLoaded?'flex':'None'}`}} className=\"search-items-wrap\">\r\n                            {\r\n                                searchItems.length !== 0 ?\r\n                                Object.keys(props.srcObject).map((e:any,i:number)=>{\r\n                                    console.log(e)\r\n                                    return  <div key={i} className=\"search-items-row-wrap\">\r\n                                                <div className=\"searchItem-header-wrap\">\r\n                                                    <span>{props.srcObject[e].name}</span>\r\n                                                </div>\r\n                                                <div className=\"search-carousel-wrap\">\r\n                                                    \r\n                                                {\r\n                                                    searchItems.map((k:any,j:number)=>{\r\n                                                        \r\n                                                        if(k.src === e){\r\n                                                            return <div key={j} className=\"search-item-wrap\">\r\n                                                                <div onClick={()=>props.openAboutPage(k.link)} style={{background:`linear-gradient(rgba(94, 94, 94, 0.14), rgba(4, 4, 4, 0.96)),url(${k.thumb})`}} className=\"search-thumb-wrap\">\r\n                                                                    <span>{k.title.length<30?k.title:k.title.slice(0,30)+\"...\"}</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                                </div>\r\n                                            </div> \r\n                                    })\r\n                                :\r\n                                <div className=\"search-empty\">\r\n                                    <h3>We found nothing matching the title!</h3>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display:`${isSearchBodyOpen?'flex':'None'}`}} className=\"search-bottom-menu-wrap\">\r\n                        <button onClick={()=>{\r\n                            if( searchInp.current && searchBody.current ){\r\n                                searchBody.current.style.height = '5vh';\r\n                                searchInp.current.value = '';\r\n                                searchInp.current.blur();\r\n                                toggleSearchBodyOpen(false);\r\n                                setTimeout(()=>closeSearch(),500);\r\n                            }\r\n                            }}style={{color:props.getColors.accentColor,background:props.getColors.highLightBgColor}} className=\"close-search\">\r\n                            <span>\r\n                                Close\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"dashboard-inner-wrap\">\r\n                <p className=\"dashboard-header\">Featured</p>\r\n                <div ref={featuredWarp} className=\"featured-wrap\">\r\n                    {\r\n                        isDashboardLoading ?\r\n                            <div className=\"dash-loader-wrap\">\r\n                                <div className=\"lds-roller\">\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                        <div className=\"featured-item\">\r\n                            <div className=\"featured-thumb-wrap\">\r\n                                <div ref={featuredThumb} className=\"featured-thumb\"/>\r\n                            </div>\r\n                            <div className=\"featured-content-wrap\">\r\n                                <p className=\"feature-title\">{dashboardItems.featuredItemInfo.title}</p>\r\n                                <p className=\"feature-desc\">{dashboardItems.featuredItemInfo.desc}</p>\r\n                                <button onClick={()=>props.openAboutPage(dashboardItems.featuredItemInfo.link)} className=\"featured-btn\">Read Now</button>\r\n                                <div className=\"featured-bottom-margin\"/>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <p className=\"dashboard-header\">Trending</p>\r\n                <div className=\"carousel-wrap\">\r\n                    {\r\n                    isDashboardLoading ?\r\n                    <div className=\"dash-loader-wrap\">\r\n                        <div className=\"lds-roller\">\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>  \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                    <div className=\"carousel-inner-wrap\">\r\n                        {\r\n                            dashboardItems.TrendingItems.map((item:any,index:any)=>{\r\n                                return <div onClick={()=>props.openAboutPage(item.link)} key={index} className=\"carousel-items\">\r\n                                    <div style={{background:`url(${item.thumb})`}} className=\"carousel-thumb\"/>\r\n                                    <div className=\"carousel-title\">{\r\n                                       item.title.length < 30 ? item.title:\r\n                                       item.title.slice(0,30) + \"..\"\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    }\r\n                </div>\r\n                <p className=\"dashboard-header\">New Updates</p>\r\n                <div className=\"carousel-wrap\">\r\n                    {\r\n                    isDashboardLoading ?\r\n                    <div className=\"dash-loader-wrap\">\r\n                        <div className=\"lds-roller\">\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>  \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                    <div className=\"carousel-inner-wrap\">\r\n                        {\r\n                            dashboardItems.newUpdates.map((item:any,index:any)=>{\r\n                                return <div onClick={()=>props.openAboutPage(item.link)} key={index} className=\"carousel-items\">\r\n                                    <div style={{background:`url(${item.thumb})`}} className=\"carousel-thumb\"/>\r\n                                    <div className=\"carousel-title\">{\r\n                                       item.title.length < 30 ? item.title:\r\n                                       item.title.slice(0,30) + \"..\"\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    }\r\n                </div>\r\n                <p className=\"dashboard-header\">Popular</p>\r\n                <div className=\"carousel-wrap\">\r\n                    {\r\n                    isDashboardLoading ?\r\n                    <div className=\"dash-loader-wrap\">\r\n                        <div className=\"lds-roller\">\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>  \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                    <div className=\"carousel-inner-wrap\">\r\n                        {\r\n                            dashboardItems.popularItems.map((item:any,index:any)=>{\r\n                                return <div onClick={()=>props.openAboutPage(item.link)} key={index} className=\"carousel-items\">\r\n                                    <div style={{background:`url(${item.thumb})`}} className=\"carousel-thumb\"/>\r\n                                    <div className=\"carousel-title\">{\r\n                                       item.title.length < 30 ? item.title:\r\n                                       item.title.slice(0,30) + \"..\"\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    }\r\n                </div>\r\n                <div className=\"dashboard-bottom-margin\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state:any) {\r\n    return state;\r\n}\r\n\r\nexport default  connect(mapStateToProps)(DashboardComponent);","import React, { FunctionComponent,useRef,useEffect,useState } from 'react';\r\nimport './settings.css';\r\nimport {backendUrl}  from '../../global';\r\nimport { store } from '../../index';\r\nimport { connect } from 'react-redux';\r\nimport { action_update_genre_sort, action_add_genre_search_object, action_add_about_manga_object, action_update_genre_page_no, action_update_genre_search_scroll_tick, action_update_selected_genre, action_add_dashboard_object, action_current_src, action_add_genre_object } from '../../reducers/actions';\r\n\r\ninterface SettingsProps {\r\n    verifyTokens: ()=> Promise<void> ;\r\n    getColors: any;\r\n} \r\nconst SettingsComponent: FunctionComponent<SettingsProps> = (props:any) =>{\r\n\r\n    let [isLoggingOut,toggleIsLoggingOut] = useState<React.SetStateAction<boolean>>(false);\r\n    let [isLoading,toggleIsLoading] = useState<React.SetStateAction<boolean>>(false);\r\n\r\n\r\n    const handleLogout = async(event: React.MouseEvent<HTMLButtonElement>) =>{\r\n        event.stopPropagation();\r\n        toggleIsLoggingOut(true);\r\n        if(isLoggingOut === false){\r\n            const resp = await fetch(backendUrl+\"logout\",{\r\n                method: 'GET',\r\n                credentials: 'include',\r\n                headers:{\r\n                    'Content-type': 'application/json'\r\n                },\r\n            });\r\n\r\n            if(resp){\r\n                toggleIsLoggingOut(true);\r\n                props.verifyTokens(); \r\n            }\r\n        }\r\n    }\r\n    const handleSrcChange = async(event: React.MouseEvent<HTMLDivElement>,src:any)=>{\r\n        event.stopPropagation();\r\n        toggleIsLoading(true);\r\n        const response = await fetch(backendUrl+'changeSrc',{\r\n            method: 'POST',\r\n            credentials:'include',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                src:src\r\n            })\r\n        })\r\n        if(response.ok){\r\n            toggleIsLoading(false);\r\n            //clear store\r\n            store.dispatch(action_add_genre_search_object({}));\r\n            store.dispatch(action_update_genre_page_no(0));\r\n            store.dispatch(action_add_genre_search_object({}))\r\n            store.dispatch(action_add_genre_object({}))\r\n            store.dispatch(action_update_genre_search_scroll_tick(0));\r\n            store.dispatch(action_update_selected_genre([]));\r\n            store.dispatch(action_update_genre_sort(\"default\"));\r\n            store.dispatch(action_add_dashboard_object({}))\r\n            store.dispatch(action_current_src(src))\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n       \r\n    })\r\n\r\n    return(\r\n        \r\n        isLoading?\r\n            <div className=\"settings-loader-wrap\">\r\n                <div className=\"lds-roller\">\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>  \r\n                    </div>\r\n                </div>\r\n            </div>:\r\n        <div className=\"settings-wrap\">\r\n            <div style={{color: props.getColors.accentColor}} className=\"settings-header-wrap\">\r\n                <h1>Settings</h1>\r\n            </div>\r\n            <div className=\"settings-body-wrap\">\r\n                <div className=\"setting-body\">\r\n                    <div style={{background:props.getColors.secondaryBgColor ,color: props.getColors.accentColor}} className=\"settings-item-wrap\">\r\n                        <div className=\"settings-item-header-wrap\">\r\n                            <span>Source</span>\r\n                        </div>\r\n                        <div style={{background:props.getColors.highLightBgColor,color: props.getColors.highLightAccentColor}} className=\"settings-item-body\">\r\n                            {\r\n                                Object.keys(props.srcObject).length !== 0 ?\r\n                                Object.keys(props.srcObject).map((item:any,index:any)=>{\r\n                                    return <div onClick={(e)=>handleSrcChange(e,item)} key={index} className=\"settings-source-item-wrap\">\r\n                                        <span>[{props.srcObject[item].type === \"manga\"?\"MANGA\":\"COMIC\"}] {props.srcObject[item].name}</span>\r\n                                        {\r\n                                            item === props.currentSrc?\r\n                                            <span className=\"material-symbols-outlined\">\r\n                                            check\r\n                                            </span>:null\r\n                                        }\r\n                                    </div>\r\n                                }):null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"logout-wrap\">\r\n                    <button onClick={handleLogout} className=\"logoutBtn\">\r\n                        <span className=\"logoutSpan\">Logout</span>\r\n                        <div className=\"logoutBtnSpinner\">\r\n                        { isLoggingOut ? \r\n                            <div className=\"spinner\">\r\n                                <div className=\"double-bounce1\"></div>\r\n                                <div className=\"double-bounce2\"></div>\r\n                            </div>\r\n                            :\r\n                            <span className=\"material-icons\">arrow_forward</span>\r\n                        }\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state:any) {\r\n    return state;\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(SettingsComponent);","import React, { FunctionComponent,useRef,useEffect,useState } from 'react';\r\nimport {backendUrl,scaperUrl}  from '../../global';\r\nimport './history.css'\r\nimport { store } from '../../index';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\ninterface HistoryProps {\r\n    getColors: any;\r\n    openAboutPage: (url:string) => void\r\n}  \r\n\r\nconst HistoryComponent: FunctionComponent <HistoryProps> = (props:any) =>{\r\n\r\n    const historyCont = useRef<HTMLDivElement>(null);\r\n    let [isHistoryObjectLoaded,toggleIsHistoryObjectLoaded] = useState<React.SetStateAction<boolean>>(false);\r\n    let [showSpinner,toggleSpinner] = useState<React.SetStateAction<boolean>>(true);\r\n    let [historyObj,setHistoryObj] = useState<React.SetStateAction<any>>([]);\r\n\r\n\r\n    useEffect(()=>{ \r\n\r\n        setTheme();\r\n        if(isHistoryObjectLoaded === false){\r\n            getUserHistory()\r\n            toggleIsHistoryObjectLoaded(true);\r\n        }\r\n\r\n    });\r\n\r\n    const getUserHistory = async()=>{\r\n        const response = await fetch(backendUrl+'getUserHistory',{\r\n            method: 'POST',\r\n            credentials:'include',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n        })\r\n\r\n        if(response){\r\n            let jsonResp = await response.json();\r\n            if(jsonResp.result === 0){\r\n                toggleSpinner(false);\r\n            }else{\r\n                \r\n                toggleSpinner(false);\r\n                const TimeSortedArr = getTimeSortedArray(jsonResp.result);\r\n                setHistoryObj(TimeSortedArr);\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const getTimeSortedArray = (arr:Array<any>)=>{\r\n        const retSmallestTimeStampBool = (t1:any,t2:any)=>{\r\n            \r\n            // if t1 smaller than t2 return TRUE else FALSE\r\n            if(t1 === t2)\r\n                return false;\r\n            if(t1.hours !== undefined && t2.hours === undefined)\r\n                return false;\r\n            else if(t2.hours !== undefined && t1.hours === undefined)\r\n                return true;\r\n            else if(t1.hours > t2.hours)\r\n                return false;\r\n            else if(t2.hours > t1.hours)\r\n                return true;\r\n            else if(t1.minutes !== undefined && t2.minutes === undefined)\r\n                return true;\r\n            else if(t2.minutes !== undefined && t1.minutes === undefined)\r\n                return true;\r\n            else if(t1.minutes > t2.minutes)\r\n                return false;\r\n            else if(t2.minutes > t1.minutes)\r\n                return true;\r\n            else if(t1.seconds && t2.seconds === undefined)\r\n                return true;\r\n            else if(t2.seconds && t1.seconds=== undefined)\r\n                return true;\r\n            else if(t1.seconds > t2.seconds)\r\n                return false;\r\n            else if(t2.seconds > t1.seconds)\r\n                return true;\r\n            else if(t1.milliseconds !== undefined && t2.milliseconds === undefined)\r\n                return true;\r\n            else if(t2.milliseconds !== undefined && t1.milliseconds=== undefined)\r\n                return true;\r\n            else if(t1.milliseconds >= t2.milliseconds)\r\n                return false;\r\n            else if(t2.milliseconds >= t1.milliseconds)\r\n                return true;\r\n        }\r\n\r\n        // sort\r\n\r\n        const swap = (arr:Array<any>,index1:number,index2:number)=>{\r\n            const temp = arr[index1];\r\n            arr[index1] = arr[index2];\r\n            arr[index2] = temp;\r\n            return arr;\r\n        }\r\n\r\n        for(let i=0; i<arr.length;i++){\r\n            for(let j=0;j<arr.length;j++){\r\n                if(retSmallestTimeStampBool(arr[i].time_difference,arr[j].time_difference) === true)\r\n                    swap(arr,j,i)\r\n            }\r\n        }\r\n\r\n        return arr\r\n\r\n\r\n    \r\n\r\n    }\r\n\r\n\r\n    // maybe needed maybe not\r\n\r\n    // const getChapterTotal =(res:Array<any>) =>{\r\n    //     return new Promise<Array<any>>(async(resolve,reject)=>{\r\n    //         let tempArr = []\r\n    //         for(let i= 0; i < res.length ; i++){\r\n    //             const response = await fetch(scaperUrl+'getMangaInfo',{\r\n    //                 method: 'POST',\r\n    //                 headers:{\r\n    //                     'Content-type': 'application/json'\r\n    //                 },\r\n    //                 body:JSON.stringify({\r\n    //                     url: res[i].link\r\n    //                 })  \r\n    //             })\r\n    \r\n    //             if(response){\r\n    //                 const jsonResp = await response.json()\r\n    //                 if(jsonResp){\r\n    //                     tempArr.push(jsonResp.mangaInfo.chapterList.reverse()[res[i].chapter_index].chapterTitle)\r\n    //                 }\r\n    //             }\r\n\r\n    //             if(i === res.length-1){\r\n    //                 resolve(tempArr)\r\n    //             }\r\n\r\n    //         }\r\n\r\n            \r\n    //     });\r\n       \r\n    // }\r\n\r\n    const setTheme = ()=>{\r\n        // sets there from colorObj\r\n        if(historyCont.current){\r\n            historyCont.current.style.color = props.getColors.highLightBgColor;\r\n        }\r\n        \r\n    }\r\n    \r\n    return(\r\n        <div ref={historyCont} className=\"history-container\">\r\n            {\r\n                showSpinner?\r\n                <div className=\"history-loader-wrap\">\r\n                                <div className=\"lds-roller\">\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>  \r\n                                    </div>\r\n                                </div>\r\n                    </div>:\r\n                    historyObj.length === 0?\r\n                    <div className=\"history-show-empty\">\r\n                    <h1>You haven't read anything, yet.</h1>\r\n                    </div>\r\n                    :\r\n                    <div className=\"history-wrap\">\r\n                        \r\n                        <div style={{display:`${historyObj.length > 0}`?'flex':'None'}} className=\"history-header-wrap\">\r\n                            <h1 style={{color: props.getColors.accentColor}}>History</h1>\r\n                        </div>\r\n                        <div style={{display:`${historyObj.length > 0}`?'block':'None'}} className=\"history-body-wrap\">\r\n                            {\r\n                                Object.keys(props.srcObject).length !==0 ?\r\n                                historyObj.map((e:any,i:number) => {\r\n                                    console.log(e)\r\n                                    return <div onClick={()=>props.openAboutPage(e.link)} style={{background:props.getColors.secondaryBgColor}} key={i} className=\"user-history-wrap\">\r\n                                        <div className =\"history-thumb-wrap\">\r\n                                            <img src={e.thumb_link}/>\r\n                                        </div>\r\n                                        <div  className=\"history-info-wrap\">\r\n                                            <span style={{fontWeight:'900', width: '96%',textAlign: 'start',marginTop: '8%',marginLeft: '4%',fontSize:'1.2rem',color:props.getColors.accentColor}}>\r\n                                                { e.title.length <=30 ? e.title : e.title.slice(0,30)+\"..\"}\r\n                                            </span>\r\n                                            <span style={{width: '100%',textAlign: 'start',marginTop: '5%',marginLeft: '4%',fontSize:'1rem',color:props.getColors.accentColor}}>\r\n                                                {props.srcObject[e.src].name}\r\n                                            </span>\r\n                                            {/* <span style={{width: '100%',textAlign: 'start',position:'absolute',top:'70%',left:'4%',fontSize:'1rem',color:props.getColors.accentColor}}>\r\n                                                {e.last_read_chapter_title}\r\n                                            </span> */}\r\n                                            <span style={{width: '100%',textAlign: 'end',position:'absolute',top:'70%',left:'-15%', fontSize:'1rem',color:props.getColors.accentColor}}>\r\n                                                {\r\n                                                    e.time_difference.hours ? \r\n                                                        e.time_difference.hours + \" hours ago\": \r\n                                                        e.time_difference.minutes? \r\n                                                            e.time_difference.minutes + \" minutes ago\":\r\n                                                            e.time_difference.seconds ? \r\n                                                                e.time_difference.seconds + \" seconds ago\":null\r\n                                                }\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                }):null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state:any) {\r\n    return state;\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(HistoryComponent);","import {scaperUrl} from '../../global';\r\nimport React, { FunctionComponent,useRef,useEffect,useState } from 'react';\r\nimport { store } from '../../index';\r\nimport { connect } from 'react-redux';\r\nimport { action_update_selected_genre, action_update_genre_page_no, action_add_genre_object,action_add_genre_search_object,action_update_genre_search_scroll_tick, action_update_genre_sort } from '../../reducers/actions';\r\nimport './genre.css'\r\n\r\ninterface GenreProps {\r\n    getColors: any;\r\n    openAboutPage: (url:string) => void;\r\n}  \r\n\r\nconst GenreComponent: FunctionComponent <GenreProps> = (props:any) =>{\r\n\r\n    let [GenreHeader, setGenreHeader] = useState<React.SetStateAction<string>>('Genres');\r\n    let [isGenreObjectLoaded,toggleGenreObjectLoaded] = useState<React.SetStateAction<boolean>>(false);\r\n    let [genreObject,setGenreObject] = useState<React.SetStateAction<any>>({});\r\n    let [genreSearchObject,setGenreSearchObject] = useState<React.SetStateAction<any>>({});\r\n    let [showSpinner,toggleSpinner] = useState<React.SetStateAction<boolean>>(true);\r\n    let [isGenreSearchObjectSet,toggleGenreSearchObject] = useState<React.SetStateAction<boolean>>(false);\r\n    let [selectedGenreArray,setSelectedGenreArr] = useState<React.SetStateAction<any>>([]);\r\n    let [isGenreLoadMoreFalse,toggleGenreLoadMore] = useState<React.SetStateAction<boolean>>(false);\r\n    let [prevScrollTick,setPrevScrollTick] = useState<React.SetStateAction<number>>(-1);\r\n    let [lastLoadScrollTick,setLastLoadScrollTick] = useState<React.SetStateAction<number>>(-1);\r\n    let [currentPageNo,setCurrentPageNo] = useState<React.SetStateAction<number>>(1);\r\n    let [stopLoad,toggleStopLoad] = useState<React.SetStateAction<boolean>>(false);\r\n    let [genreSort,setGenreSort] = useState<React.SetStateAction<string>>(\"default\");\r\n\r\n\r\n    const searchBody = useRef<HTMLDivElement>(null);\r\n    const sortOption = useRef<HTMLSelectElement>(null);\r\n\r\n\r\n    const getGenreObject = async() =>{\r\n        const response = await fetch(scaperUrl+'getGenres',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'src': props.currentSrc,\r\n            })\r\n        });\r\n\r\n        if(response.ok){\r\n            const jsonResp = await response.json()\r\n            if(jsonResp){\r\n                store.dispatch(action_add_genre_object(jsonResp.genreList))\r\n                setGenreObject(jsonResp.genreList);\r\n                toggleSpinner(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const addToSelectGenre = (e:React.TouchEvent|React.MouseEvent,title:string,link:string) =>{\r\n        e.stopPropagation();\r\n        // adds to selected genre array\r\n        const simpleSelect  = props.srcObject[props.currentSrc].simpleGenreSelect; \r\n        if(simpleSelect === false || simpleSelect === undefined){\r\n            let tempArr = [...selectedGenreArray];\r\n            let isTitleFoundFlag = false;\r\n            tempArr = tempArr.filter((e:any) => {\r\n                if(e.title === title){\r\n                    isTitleFoundFlag = true\r\n                    if(e.include === true){\r\n                        e.include = false;\r\n                        return true\r\n                    }else if(e.include === false){\r\n                        return false\r\n                    }\r\n                }else{\r\n                    return true;\r\n                }\r\n            });\r\n            isTitleFoundFlag ?tempArr: tempArr.push({title:title,include:true,link:link})\r\n            setSelectedGenreArr(tempArr);\r\n            store.dispatch(action_update_selected_genre(tempArr))\r\n\r\n        }else{\r\n            // source cannot select more than 1 tag\r\n            setSelectedGenreArr([{title:title,include:true,link:link}]);\r\n            store.dispatch(action_update_selected_genre([{title:title,include:true,link:link}]))\r\n\r\n        }\r\n       \r\n    }\r\n\r\n    const removeItemfromGenreArr = (e:React.TouchEvent|React.MouseEvent,title:string) =>{\r\n        e.stopPropagation();\r\n        let tempArr = [...selectedGenreArray];\r\n        tempArr = tempArr.filter((e:any) => {\r\n            if(e.title === title){\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        });\r\n        setSelectedGenreArr(tempArr);\r\n    }\r\n\r\n    const handleGenreSearch = async(e:React.TouchEvent|React.MouseEvent|null,pageNo = 1)=>{\r\n        if(e !== null){\r\n            e.stopPropagation();\r\n        }\r\n        if(pageNo == 1){\r\n            toggleSpinner(true);\r\n        }\r\n        const response = await fetch(scaperUrl+'genreManga',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'src': props.currentSrc,\r\n                'page': pageNo,\r\n                'genreArray': selectedGenreArray,\r\n                'sort' : genreSort\r\n            })\r\n        });\r\n\r\n        if(response.ok){\r\n            const jsonResp = await response.json()\r\n            if(jsonResp){\r\n                toggleGenreLoadMore(false)\r\n                if(pageNo == 1){\r\n                    console.log(jsonResp)\r\n                    store.dispatch(action_add_genre_search_object(jsonResp.result));\r\n                    setGenreSearchObject(jsonResp.result);\r\n                    toggleGenreSearchObject(true);\r\n                    toggleSpinner(false);\r\n                }else{\r\n                    \r\n                    if(jsonResp.result.resultList !== \"END\"){\r\n                        let temp = genreSearchObject\r\n                        temp.resultList = temp.resultList.concat(jsonResp.result.resultList);\r\n                        store.dispatch(action_add_genre_search_object(temp));\r\n                        setGenreSearchObject(temp);\r\n                        \r\n                    }else{\r\n                        store.dispatch(action_update_genre_page_no(pageNo-1))\r\n                        toggleStopLoad(true)\r\n                    }\r\n                    \r\n                    \r\n                        \r\n                    \r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const checkGenreInArr = (title:string)=>{\r\n        let isTitleFoundFlag = false;\r\n        let selectedType;\r\n        selectedGenreArray.forEach((e:any)=>{\r\n            if(e.title === title){\r\n                isTitleFoundFlag = true;\r\n                selectedType = e.include;\r\n            }\r\n        })\r\n        if(isTitleFoundFlag)\r\n            return [true,selectedType]\r\n        else\r\n            return false\r\n    }\r\n\r\n    const handleGenreScroll = (e: React.UIEvent<HTMLDivElement>) =>{\r\n        const div = e.target as HTMLDivElement;\r\n        let target = Math.floor((div.scrollHeight - div.clientHeight -1))\r\n        store.dispatch(action_update_genre_search_scroll_tick(div.scrollTop))\r\n        if(prevScrollTick < div.scrollTop){\r\n            if((div.scrollTop >= target -1 && div.scrollTop <= target + 1) \r\n                && isGenreLoadMoreFalse === false \r\n                && div.scrollTop > lastLoadScrollTick){\r\n                setLastLoadScrollTick(div.scrollTop)\r\n                toggleGenreLoadMore(true)\r\n                if(stopLoad === false){\r\n                    let page = parseInt(String(currentPageNo)) + 1;\r\n                    store.dispatch(action_update_genre_page_no(page))\r\n                    setCurrentPageNo(page)\r\n                    handleGenreSearch(null,page)   \r\n                }else{\r\n                    toggleGenreLoadMore(false);\r\n                }\r\n            }\r\n        }\r\n        setPrevScrollTick(div.scrollTop)\r\n    }\r\n\r\n    const clearGenreSearch = (e:React.TouchEvent|React.MouseEvent)=>{\r\n        console.log('back')\r\n        e.stopPropagation();\r\n        searchBody.current?searchBody.current.scrollTo({top:0}):null;\r\n        store.dispatch(action_add_genre_search_object({}));\r\n        store.dispatch(action_update_genre_page_no(0));\r\n        store.dispatch(action_update_genre_search_scroll_tick(0));\r\n        store.dispatch(action_update_selected_genre([]));\r\n        store.dispatch(action_update_genre_sort(\"default\"));\r\n        toggleGenreSearchObject(false);\r\n        setSelectedGenreArr([]);\r\n        setGenreSort(\"default\");\r\n    }\r\n\r\n    const handleGenreSort = () =>{\r\n        if(sortOption.current){\r\n            setGenreSort(sortOption.current.value);\r\n            store.dispatch(action_update_genre_sort(sortOption.current.value));\r\n            store.dispatch(action_update_genre_page_no(1))\r\n            setCurrentPageNo(1)\r\n            handleGenreSearch(null,1)\r\n        }\r\n    }\r\n   \r\n\r\n    useEffect(()=>{\r\n        \r\n        if(isGenreObjectLoaded === false && props.currentSrc.length !== 0 && Object.keys(props.srcObject).length !== 0){\r\n            setGenreSort(props.srcObject[props.currentSrc].defaultSort);\r\n            store.dispatch(action_update_genre_sort(props.srcObject[props.currentSrc].defaultSort));\r\n            // load genre object from api\r\n            if(Object.keys(props.genreObject).length !== 0){\r\n                setGenreObject(props.genreObject);\r\n                toggleSpinner(false);\r\n                if(Object.keys(props.genreSearchObject).length !== 0){\r\n                    setTimeout(()=>searchBody.current?searchBody.current.scrollTo({top:props.genreSearchTick,behavior: 'smooth'}):null,100)\r\n                    setGenreSearchObject(props.genreSearchObject);\r\n                    toggleGenreSearchObject(true);\r\n                    setSelectedGenreArr(props.selectedGenreArray)\r\n                    setCurrentPageNo(props.genrePageNo);\r\n                    setGenreSort(props.genreSort);\r\n                }\r\n            }else{\r\n                getGenreObject();\r\n            }\r\n            toggleGenreObjectLoaded(true);\r\n        }\r\n        \r\n        \r\n    })\r\n\r\n    return(\r\n        <div className=\"genre-container\">\r\n            <div style={{color:props.getColors.accentColor}}className=\"genre-header-wrap\">\r\n                <h1 style={{display:`${isGenreSearchObjectSet || showSpinner?'None':'Block'}`}}>{GenreHeader}</h1>\r\n                <div style={{display:`${isGenreSearchObjectSet?'flex':'None'}`}} className=\"genre-back-wrap\">\r\n                    <div onClick={e =>clearGenreSearch(e)} style={{color:props.getColors.accentColor,background:props.getColors.secondaryBgColor}} className=\"genre-back-btn\">\r\n                        <span className=\"material-symbols-outlined\">\r\n                            chevron_left\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    isGenreSearchObjectSet && genreSearchObject.sorts.length > 0?\r\n                    <div className=\"genre-sorts-container\">\r\n                    <select ref={sortOption} defaultValue={String(genreSort)} onChange={handleGenreSort} style={{background: props.getColors.secondaryBgColor, color:props.getColors.accentColor}} className=\"sort-selector\">\r\n                        {\r\n                            genreSearchObject.sorts.map((e:any,i:number)=>{\r\n                                return <option key={i} value={`${e}`}>{e}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    </div>:null\r\n                }\r\n                \r\n            </div>\r\n            <div className=\"genre-body-container\">\r\n                {\r\n                    showSpinner?\r\n                    <div className=\"genre-loader-wrap\">\r\n                        <div className=\"lds-roller\">\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div>  \r\n                            </div>\r\n                        </div>\r\n                    </div>:\r\n                    <div className=\"genre-body\">\r\n                        {\r\n                            isGenreSearchObjectSet?\r\n                            <div ref={searchBody} onScroll={e=>handleGenreScroll(e)} className=\"genre-search-body\">\r\n                                {\r\n                                    genreSearchObject.resultList !== \"END\"?\r\n                                    genreSearchObject.resultList.map((e:any,i:number)=>{\r\n                                        return <div onClick={()=>props.openAboutPage(e.link)} key={i} className=\"genre-search-item-wrap\">\r\n                                            <div style={{color:props.getColors.accentColor,background:`linear-gradient(rgb(94 94 94 / 14%), rgb(4 4 4)),url(${e.thumb})`}} className=\"genre-item-thumb\">\r\n                                                <span>{e.title}</span>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    }):null\r\n                                }\r\n                                <div style={{color:props.getColors.secondaryBgColor}} className=\"genre-search-bottom-wrap\">\r\n                                    \r\n                                    {\r\n                                        isGenreLoadMoreFalse?\r\n                                        <div className=\"genre-scroll-bottom-loader-wrap\">\r\n                                            <div className=\"spinner\">\r\n                                                <div style={{background:props.getColors.accentColor}} className=\"double-bounce1\"></div>\r\n                                                <div style={{background:props.getColors.accentColor}} className=\"double-bounce2\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        <h2>You have reached the end!</h2>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"genre-menu-body\">\r\n                                <div style={{color: props.getColors.accentColor}} className=\"genre-menu-wrap\">\r\n                                    {\r\n                                        Object.keys(genreObject).length !== 0 ?\r\n                                        genreObject.map((e:any,i:number)=>{\r\n                                            let check:any = checkGenreInArr(e.title);\r\n                                            return <div onClick={(event)=>addToSelectGenre(event,e.title,e.link)} style={{background:props.getColors.highLightBgColor,border:`${checkGenreInArr(e.title) === false?\"None\":`${ check[1] === true ?\"solid #80c480 2px\":\"solid #d86666 2px\"}`}`}} key={i} className=\"genre-selector-wrap\">\r\n                                                        <span>{e.title}</span>\r\n                                                    </div>\r\n                                        }):\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                                <div className=\"genre-menu-bottom-wrap\">\r\n                                    <div style={{color: props.getColors.accentColor}} className=\"genre-selected-carousel\">\r\n                                    {\r\n                                        selectedGenreArray.map((e:any,i:number)=>{\r\n                                            let check:any = checkGenreInArr(e.title);\r\n                                            return <div onClick={(event)=>removeItemfromGenreArr(event,e.title)}style={{background:props.getColors.highLightBgColor,marginLeft:`${i===0?'10%':'2%'}`,border:`${checkGenreInArr(e.title) === false?\"None\":`${ check[1] === true ?\"solid #80c480 2px\":\"solid #d86666 2px\"}`}`}} key={i} className=\"genre-carousel-item\">\r\n                                                <span>\r\n                                                    {e.title}\r\n                                                </span>\r\n                                                <span  className='material-symbols-outlined genre-remove-span' >\r\n                                                        close\r\n                                                </span>\r\n                                            </div>\r\n                                        })\r\n                                    }\r\n                                    </div>\r\n                                    <div className=\"genre-btn-wrap\">    \r\n                                        <button onClick={e=>handleGenreSearch(e)} style={{display: `${ selectedGenreArray.length !== 0? \"flex\":\"None\"}`,background:props.getColors.highLightBgColor,color: props.getColors.highLightAccentColor}} className=\"genre-filter-btn\">\r\n                                            <span className='material-symbols-outlined' >\r\n                                                search\r\n                                            </span>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        \r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state:any) {\r\n    return state;\r\n  }\r\n  \r\n\r\nexport default  connect(mapStateToProps)(GenreComponent);","import React, { useRef,useEffect,useState,useReducer } from 'react';\r\nimport {useLocation,useSearchParams,useNavigate,createSearchParams} from 'react-router-dom';\r\nimport './aboutManga.css';\r\nimport {backendUrl,scaperUrl}  from '../../global';\r\nimport { action_add_about_manga_object } from '../../reducers/actions';\r\nimport { store } from '../../index';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AboutMangaComponent = (props:any) =>{\r\n    const location = useLocation();\r\n    const isMobile = require('is-mobile');\r\n    const navigate = useNavigate();\r\n\r\n\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    let [aboutMangaObj, setAboutMangaObj] = useState<React.SetStateAction<any>>({});\r\n    let [isLoading,toggleIsLoading] = useState<React.SetStateAction<boolean>>(true);\r\n    let [isDataLoaded,toggleIsDataLoaded] = useState<React.SetStateAction<boolean>>(false);\r\n    let [state, setState] = useState<React.SetStateAction<any>>({});\r\n    let [isUserDataLoaded,toggleIsUserDataLoaded] = useState<React.SetStateAction<boolean>>(false);\r\n    let [dontBookmarkShowSpinner,toggleBookmarkSpinner] = useState<React.SetStateAction<boolean>>(false);\r\n    let [userDataObject,setUserDataObject] = useState<React.SetStateAction<any>>({});\r\n    \r\n    const bgCont = useRef<HTMLDivElement>(null);\r\n    const aboutThumb =  useRef<HTMLDivElement>(null);\r\n    const topBarBtn =  useRef<HTMLButtonElement>(null);\r\n    const mobileInnerContainer = useRef<HTMLDivElement>(null);\r\n    const aboutBottomCont = useRef<HTMLDivElement>(null);\r\n    const bookmarkBtn =  useRef<HTMLButtonElement>(null);\r\n    const readNowBtn =  useRef<HTMLButtonElement>(null);\r\n    const doubleBounce =  useRef<HTMLDivElement>(null);\r\n    const doubleBounce2 =  useRef<HTMLDivElement>(null);\r\n    const bookmarkSpinnerWrap =  useRef<HTMLDivElement>(null)\r\n\r\n\r\n\r\n    useEffect(()=>{ \r\n        \r\n\r\n\r\n\r\n\r\n        setState(location.state)\r\n        loadManga(state);\r\n        if(isDataLoaded && props.currentSrc.length !==0 && Object.keys(props.aboutMangaObject).length !== 0){\r\n            if(isUserDataLoaded === false){\r\n                getUserData();\r\n                toggleIsUserDataLoaded(true);\r\n            }\r\n        }\r\n\r\n        if(Object.keys(props.aboutMangaObject).length !== 0 && isDataLoaded === false){\r\n            //load from props\r\n            setAboutMangaObj(props.aboutMangaObject)\r\n            toggleIsDataLoaded(true)\r\n            toggleIsLoading(false)\r\n            \r\n        }else{\r\n            if(isDataLoaded === false){\r\n                getDetails(decodeURIComponent(String(searchParams.get(\"link\"))))\r\n                toggleIsDataLoaded(true)\r\n            }\r\n            if(Object.keys(state).length !== 0 && Object.keys(aboutMangaObj).length !== 0){\r\n                toggleIsLoading(false)\r\n            }\r\n        }\r\n    })\r\n\r\n    const getUserData = async()=>{\r\n        const response = await fetch(backendUrl+'getUserData',{\r\n            method: 'POST',\r\n            credentials:'include',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title: aboutMangaObj.title,\r\n                src:getSrcFromLink(),\r\n            })\r\n        })\r\n\r\n        if(response){\r\n            const jsonResp = await response.json();\r\n            setUserDataObject(jsonResp.result)\r\n            toggleBookmarkSpinner(true)\r\n        }\r\n    }\r\n\r\n    const goBack = (e:React.MouseEvent| React.TouchEvent) =>{\r\n        e.stopPropagation();\r\n        store.dispatch(action_add_about_manga_object({}));\r\n        navigate(-1);\r\n    }\r\n\r\n    const openReader = async(e:React.MouseEvent| React.TouchEvent,url:string,index:number) =>{\r\n        e.stopPropagation();\r\n        const response = await fetch(backendUrl+'addToHistory',{\r\n            method: 'POST',\r\n            credentials:'include',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title: aboutMangaObj.title,\r\n                src:getSrcFromLink(),\r\n                link:decodeURIComponent(String(searchParams.get(\"link\"))),\r\n                thumbLink:aboutMangaObj.thumb,\r\n                chapterIndex: aboutMangaObj.chapterList.length-index-1\r\n            })\r\n        })\r\n\r\n        if(response.ok){\r\n            const jsonResp = await response.json();\r\n            if(url.length !== 0){\r\n                const params = createSearchParams({\r\n                    link: encodeURIComponent(url),\r\n                    mangaLink:decodeURIComponent(String(searchParams.get(\"link\"))),\r\n                    currentChapterIndex: String(index)\r\n                }).toString()\r\n                url = 'read?' + params\r\n                navigate(url,{state:{colorObj: state.colorObj}})\r\n            }\r\n        }else{\r\n            alert(\"ERROR ADDING MANGA TO HISTORY\")\r\n        }     \r\n    }\r\n    const getSrcFromLink = () =>{\r\n        const link = decodeURIComponent(String(searchParams.get(\"link\")))\r\n        let src = ''\r\n        Object.keys(props.srcObject).forEach(e => {\r\n            // console.log(props.srcObject[e])\r\n            const domain = props.srcObject[e].domain;\r\n            if(link.includes(domain)){\r\n                src = e;\r\n            }\r\n        });\r\n        return src\r\n    }\r\n    const handleBookMark = async(e:React.MouseEvent| React.TouchEvent)=>{\r\n        e.stopPropagation();\r\n        toggleBookmarkSpinner(false);\r\n\r\n        \r\n\r\n\r\n        const dataObj = {title: aboutMangaObj.title,\r\n                src:getSrcFromLink(),\r\n                link:decodeURIComponent(String(searchParams.get(\"link\"))),\r\n                thumbLink:aboutMangaObj.thumb,\r\n        };\r\n\r\n        const response = await fetch(backendUrl+'addToBookmarks',{\r\n            method: 'POST',\r\n            credentials:'include',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(dataObj)\r\n        })\r\n\r\n        if(response.ok){\r\n            getUserData();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const loadManga = (state:any) =>{\r\n\r\n        if( dontBookmarkShowSpinner === true &&  Object.keys(userDataObject).length !== 0){\r\n            if(readNowBtn.current && bookmarkBtn.current){\r\n                if(userDataObject.isBookmarked === 'YES'){\r\n                    bookmarkBtn.current.style.background = state.colorObj.highLightBgColor;\r\n                    bookmarkBtn.current.style.color = state.colorObj.highLightAccentColor;\r\n                }else{\r\n                    bookmarkBtn.current.style.background = state.colorObj.secondaryBgColor;\r\n                    bookmarkBtn.current.style.color = state.colorObj.accentColor;\r\n                }\r\n                readNowBtn.current.style.background = state.colorObj.secondaryBgColor;\r\n                readNowBtn.current.style.color = state.colorObj.accentColor;\r\n            }\r\n            \r\n            \r\n        }\r\n\r\n\r\n        if(bgCont.current && aboutThumb.current && aboutBottomCont.current && topBarBtn.current && mobileInnerContainer.current){\r\n            bgCont.current.style.background = `url(${aboutMangaObj.thumb})`;   \r\n            aboutThumb.current.style.background = `url(${aboutMangaObj.thumb})`;\r\n            topBarBtn.current.style.color = state.colorObj.accentColor;\r\n            topBarBtn.current.style.background = state.colorObj.secondaryBgColor + \"8a\";\r\n            mobileInnerContainer.current.style.color = state.colorObj.accentColor;\r\n            aboutBottomCont.current.style.background = state.colorObj.bgColor;\r\n            // doubleBounce.current.style.background =  state.colorObj.accentColor;\r\n            // doubleBounce2.current.style.background =  state.colorObj.accentColor;\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    const getDetails = async (url:string) => {\r\n        const response = await fetch(scaperUrl+'getMangaInfo',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'url': url\r\n            })\r\n        })\r\n        if(response.ok){\r\n            const jsonResp = await response.json();\r\n            \r\n            setAboutMangaObj(jsonResp.mangaInfo)\r\n            store.dispatch(action_add_about_manga_object(jsonResp.mangaInfo));\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"about-manga-wrapper\">\r\n            {\r\n                isMobile()?\r\n                <div className=\"about-manga-mobile-outer-container\">\r\n                    {\r\n                        isLoading?\r\n                        <div className=\"about-manga-loader-wrap\">\r\n                                <div className=\"lds-roller\">\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div>  \r\n                                    </div>\r\n                                </div>\r\n                        </div>:\r\n                        <div ref={mobileInnerContainer} className=\"about-manga-mobile-inner-container\">\r\n                            <div ref={bgCont} className=\"background-about\">\r\n                                <div className=\"blur-bg\"/>\r\n                            </div>\r\n                            <div className=\"about-manga-top-container\">\r\n                                <div className=\"about-manga-top-bar\">\r\n                                    <button onClick={(e)=>goBack(e)} ref={topBarBtn} className=\"about-top-bar-btn\">\r\n                                        <span className=\"material-symbols-outlined\">\r\n                                            chevron_left\r\n                                        </span>\r\n                                    </button>\r\n                                </div>\r\n                                <div ref={aboutThumb} className=\"about-thumb\"/>\r\n                            </div>\r\n                            <div ref={aboutBottomCont} className=\"about-manga-bottom-container\">\r\n                                <p className=\"about-manga-title\">\r\n                                    {aboutMangaObj.title}\r\n                                </p>\r\n                                {\r\n                                    aboutMangaObj.author !== \"\" ? \r\n                                    <p className=\"about-manga-author\">\r\n                                        By {aboutMangaObj.author}\r\n                                    </p>:null\r\n                                }\r\n                                <p className=\"about-manga-status\">\r\n                                    {aboutMangaObj.status.toLowerCase() === \"ongoing\" ? String.fromCodePoint(0x1F7E2):  String.fromCodePoint(0x2705)}\r\n                                    {String.fromCodePoint(0x00A0)+String.fromCodePoint(0x00A0)}\r\n                                    {aboutMangaObj.status}\r\n                                </p>\r\n                                <div className=\"about-manga-option-wrap\">\r\n                                    {\r\n                                    dontBookmarkShowSpinner?\r\n                                    <div className=\"about-manga-option-inner-wrap\">\r\n                                        <button onClick={(e)=>handleBookMark(e)}  ref={bookmarkBtn} className=\"about-manga-bookmark\">\r\n                                            <span className=\"material-symbols-outlined\">\r\n                                                bookmark\r\n                                            </span>\r\n                                        </button>\r\n                                        <button onClick={(e)=>openReader(e,aboutMangaObj.chapterList[aboutMangaObj.chapterList.length - userDataObject.chapterIndex - 1].chapterLink,userDataObject.chapterIndex)}  ref={readNowBtn} className=\"about-manga-read-button\">\r\n                                            {\r\n                                                userDataObject.chapterIndex === 0 ? \"Start\" : \"Read: \"+ aboutMangaObj.chapterList[aboutMangaObj.chapterList.length - userDataObject.chapterIndex - 1].chapterTitle\r\n                                            }\r\n                                        </button>\r\n                                    </div>\r\n                                    :\r\n                                    <div ref={bookmarkSpinnerWrap} className=\"about-manga-option-spinner-wrap\">\r\n                                        <div className=\"bookmark-spinner\">\r\n                                            <div className=\"lds-roller\">\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>  \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    }\r\n                                </div>\r\n                                <p className=\"about-manga-header\">\r\n                                    Synopsis\r\n                                </p>\r\n                                <p className=\"about-manga-synopsis\">\r\n                                    {aboutMangaObj.desc}\r\n                                </p>\r\n                                <p className=\"about-manga-header\">\r\n                                    Chapters\r\n                                </p>\r\n                                <div className=\"about-manga-chapter-wrap\">\r\n                                    {\r\n                                        isUserDataLoaded && dontBookmarkShowSpinner?\r\n                                        aboutMangaObj.chapterList.map((item:any,index:any)=>{\r\n                                            if(item !== undefined)\r\n                                            return <div onClick={(e)=>openReader(e,item.chapterLink,index)} key={index} style={{background: userDataObject.chapterIndex === aboutMangaObj.chapterList.length - index - 1 ? state.colorObj.highLightBgColor: state.colorObj.secondaryBgColor}} className=\"about-manga-chapter-item-wrap\">\r\n                                                        <span className=\"about-manga-chapter-title\">{item.chapterTitle}</span>\r\n                                                        <span className=\"about-manga-chapter-date\">{item.chapterDate}</span>\r\n                                                    </div>\r\n                                            else\r\n                                                console.log(item)\r\n\r\n                                        }):\r\n                                        <div className=\"chapter-full-loader\">\r\n                                            <div className=\"lds-roller\">\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                                <div>  \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"about-manga-bottom-margin\"/>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>:\r\n                null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state:any) {\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(AboutMangaComponent);\r\n  ","import React, {  Dispatch,useRef,useEffect,useState, FunctionComponent,useReducer } from 'react';\r\nimport {useLocation,useSearchParams,useNavigate} from 'react-router-dom';\r\nimport './reader.css';\r\nimport Cookies from 'universal-cookie';\r\nimport {backendUrl,scaperUrl}  from '../../global';\r\nimport { store } from '../../index';\r\nimport { connect } from 'react-redux';\r\nimport { action_add_about_manga_object } from '../../reducers/actions';\r\nimport { createImportSpecifier } from 'typescript';\r\n\r\n\r\n\r\nconst ReaderComponent = (props:any) =>{\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const cookies = new Cookies();\r\n\r\n    \r\n    let [imageList, setImageList] = useState<React.SetStateAction<any>>([]);\r\n    let [imageCount, setImageCount] = useState<React.SetStateAction<number>>(0);\r\n    let [loadCount, setLoadCount] = useState<React.SetStateAction<any>>([]);\r\n    let [isDataLoaded,toggleIsDataLoaded] = useState<React.SetStateAction<boolean>>(false);\r\n    let [isImagesLoaded,toggleIsImagesLoaded] = useState<React.SetStateAction<boolean>>(false);\r\n    let [state, setState] = useState<React.SetStateAction<any>>({});\r\n    let [isScrollingVertical,toggleScrollingVertical] = useState<React.SetStateAction<boolean>>(false);\r\n    let [prevScrollTick,setPrevScrollTick] = useState<React.SetStateAction<number>>(-1);\r\n    let [menuTop,setMenuTop] = useState<React.SetStateAction<string>>('87%');\r\n    let [topMenuTop,setTopMenuTop] = useState<React.SetStateAction<string>>('2%');\r\n    let [isScrollTypeSet,setScrollType] = useState<React.SetStateAction<boolean>>(false);\r\n    let [aboutMangaObj,setAboutMangaObject] = useState<React.SetStateAction<any>>({});\r\n    let [isaboutMangaObjSet,toggleaboutMangaObjSet] = useState<React.SetStateAction<boolean>>(false);\r\n    let [isaboutMangaObjloaded,toggleaboutMangaObjloaded] = useState<React.SetStateAction<boolean>>(false);\r\n    let [currentChapterIndex,setCurrentChapterIndex] = useState<React.SetStateAction<number>>(-1);\r\n    let [isGetImageCalled,toggleGetImageCalled] = useState<React.SetStateAction<boolean>>(false);\r\n    let [isScrollTop,toggleIsScrollTop] = useState<React.SetStateAction<boolean>>(true);\r\n    let [currentImageCount,setCurrentImageCount] = useState<React.SetStateAction<number>>(0);\r\n\r\n    // let currentChapterIndex = -1;\r\n\r\n    let refArrayOfImages = useRef<Array<HTMLDivElement | null>>([])\r\n    const currentImage = useRef<HTMLImageElement>(null);\r\n    const bottomMenu = useRef<HTMLDivElement>(null);\r\n    const topMenu = useRef<HTMLDivElement>(null);\r\n    const timer5ms = (res:string) => new Promise(res => setTimeout(res, 5))\r\n    let currentCount = 0;\r\n\r\n    useEffect(()=>{\r\n        setState(location.state)\r\n\r\n        // check if about manga prop is empty if empty load about manga object again; edge case\r\n\r\n        if(isaboutMangaObjSet === false){\r\n            if(Object.keys(props.aboutMangaObject).length === 0){\r\n                // load again\r\n                if(isaboutMangaObjloaded === false){\r\n                    toggleaboutMangaObjloaded(true);\r\n                    loadAboutManga();\r\n                }\r\n                \r\n            }else{\r\n                setAboutMangaObject(props.aboutMangaObject)\r\n                toggleaboutMangaObjSet(true);\r\n            }\r\n        }else{\r\n            if( isGetImageCalled === false && isDataLoaded === false){\r\n                toggleGetImageCalled(true)\r\n                toggleIsDataLoaded(true);\r\n                getMangaUrls(decodeURIComponent(String(searchParams.get(\"link\"))));\r\n\r\n            }\r\n        }\r\n        \r\n        // set scroll type from cookie\r\n\r\n        if(isScrollTypeSet === false){\r\n            //check current scroll type\r\n            let type = cookies.get('scrollType');\r\n            if(type === undefined){\r\n                cookies.set('scrollType', 'Horizontal', { path: '/' });\r\n                toggleScrollingVertical(false)\r\n            }else if(type === 'Vertical'){\r\n                cookies.set('scrollType', 'Vertical', { path: '/' });\r\n                toggleScrollingVertical(true)\r\n            }else if(type === 'Horizontal'){\r\n                cookies.set('scrollType', 'Horizontal', { path: '/' });\r\n                toggleScrollingVertical(false)\r\n            }\r\n            setScrollType(true)\r\n        }\r\n        if(isScrollingVertical === false){\r\n            handleHorizontalScroll(\"start\")\r\n        }\r\n        if(Object.keys(state).length !==0){\r\n            setTheme();\r\n        }\r\n    })\r\n    \r\n    const goBack = (e:React.MouseEvent| React.TouchEvent) =>{\r\n        e.stopPropagation();\r\n        navigate(-1);\r\n    }\r\n\r\n\r\n    const getMangaUrls = async (url:string) =>{\r\n        setImageCount(0);\r\n        const response = await fetch(scaperUrl+'getImageList',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'url': url\r\n            })\r\n        })\r\n        if(response.ok){\r\n            const jsonResp = await response.json();\r\n            toggleIsDataLoaded(true)\r\n            console.log(jsonResp)\r\n            if(jsonResp.message === 'error'){\r\n                alert(\"Something went wrong\")\r\n                navigate(-1);\r\n            }else{\r\n                preLoadImages(jsonResp.imageList);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const preLoadImages = async(images:Array<any>)=>{\r\n        // load all images into an array <imageList>\r\n\r\n        const loadImages = (images:any) => {\r\n            console.log(images.length)\r\n            return new Promise<Array<HTMLImageElement>>((resolve, reject) => {\r\n                (function loadEach(images, index) {\r\n                    if (index < images.length) {\r\n                        let img = new Image();\r\n                        img.src = images[index];\r\n                        images[index] = img;\r\n                        images[index].onload = function() {\r\n                            loadEach(images, ++index);\r\n                        };\r\n                        images[index].onerror = (err:any) => reject(err);\r\n                    } else {\r\n                        resolve(images);\r\n                    }\r\n                })(images, 0)\r\n            });\r\n        }\r\n        console.log(images.length)\r\n        if(images.length>5){\r\n            console.log(\"sectional loading\")\r\n            const imgArrSplitOne = images.slice(0,5)\r\n            const imgArrSplitTwo = images.slice(5,images.length)\r\n            // let imgArr:Array<any>;\r\n            // let imgArr2:Array<any>;\r\n            let imgArr:Array<any>= await loadImages(imgArrSplitOne)\r\n            let imgArr2:Array<any>= await loadImages(imgArrSplitTwo)\r\n\r\n            // [imgArr, imgArr2] = await Promise.all([loadImages(imgArrSplitOne), loadImages(imgArrSplitTwo)]);\r\n            if(imgArr){\r\n                console.log('img arr 1 loaded')\r\n                setImageList(imgArr)\r\n                setImageCount(imgArr.length)\r\n                toggleIsImagesLoaded(true);\r\n                if(imgArr2){\r\n                    console.log('img arr 2 loaded')\r\n                    let temp = imgArr.concat(imgArr2)\r\n                    setImageList(temp)\r\n                    setImageCount(temp.length)\r\n                }\r\n            }\r\n            // if(imgArr2){\r\n            // }\r\n\r\n        }else{\r\n            let imgArr:Array<any>= await loadImages(images);\r\n            if(imgArr){\r\n                setImageList(imgArr)\r\n                setImageCount(imgArr.length)\r\n                !isImagesLoaded? toggleIsImagesLoaded(true) : null;\r\n            }\r\n        }\r\n\r\n\r\n        \r\n    }\r\n\r\n    const setTheme = ()=>{\r\n        if(bottomMenu.current){\r\n            bottomMenu.current.style.display = 'flex';\r\n            bottomMenu.current.style.background = state.colorObj.secondaryBgColor+\"d6\";\r\n            bottomMenu.current.style.color = state.colorObj.accentColor;\r\n        }\r\n        if(topMenu.current){\r\n            topMenu.current.style.display = 'flex';\r\n            topMenu.current.style.background = state.colorObj.secondaryBgColor+\"d6\";\r\n            topMenu.current.style.color = state.colorObj.highLightAccentColor;\r\n        }\r\n    }\r\n\r\n    const getSrcFromLink = () =>{\r\n        const link = decodeURIComponent(String(searchParams.get(\"link\")))\r\n        let src = ''\r\n        Object.keys(props.srcObject).forEach(e => {\r\n            // console.log(props.srcObject[e])\r\n            const domain = props.srcObject[e].domain;\r\n            if(link.includes(domain)){\r\n                src = e;\r\n            }\r\n        });\r\n        return src\r\n    }\r\n\r\n    const loadNextChapter = async(e:React.MouseEvent| React.TouchEvent | null)=>{\r\n        if(e !== null){\r\n            e.stopPropagation();\r\n        }\r\n        setCurrentImageCount(0);\r\n        const chapterList = props.aboutMangaObject.chapterList;\r\n        if(currentChapterIndex === -1){\r\n            // currentChapterIndex = parseInt(decodeURIComponent(String(searchParams.get(\"currentChapterIndex\"))))\r\n            setCurrentChapterIndex(parseInt(decodeURIComponent(String(searchParams.get(\"currentChapterIndex\")))));\r\n            currentChapterIndex = parseInt(decodeURIComponent(String(searchParams.get(\"currentChapterIndex\"))))\r\n        }\r\n        // currentChapterIndex = parseInt(decodeURIComponent(String(searchParams.get(\"currentChapterIndex\"))))\r\n        const index = parseInt(String(currentChapterIndex))\r\n        \r\n        if(index - 1 < 0){\r\n            navigate(-1);\r\n        }else{\r\n            toggleIsImagesLoaded(false)\r\n            // update history\r\n            const dataObj = {\r\n                title: aboutMangaObj.title,\r\n                src:getSrcFromLink(),\r\n                link: decodeURIComponent(String(searchParams.get(\"mangaLink\"))),\r\n                thumbLink:aboutMangaObj.thumb,\r\n                chapterIndex: aboutMangaObj.chapterList.length-index\r\n            }\r\n            const response = await fetch(backendUrl+'addToHistory',{\r\n                method: 'POST',\r\n                credentials:'include',\r\n                headers:{\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(dataObj)\r\n            })\r\n\r\n            if(response){\r\n                setCurrentChapterIndex(index - 1);\r\n                getMangaUrls(chapterList[index - 1].chapterLink);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const loadPrevChapter = async(e:React.MouseEvent| React.TouchEvent | null)=>{\r\n        if(e !== null){\r\n            e.stopPropagation();\r\n        }\r\n        const chapterList = props.aboutMangaObject.chapterList;\r\n        if(currentChapterIndex === -1){\r\n            // currentChapterIndex = parseInt(decodeURIComponent(String(searchParams.get(\"currentChapterIndex\"))))\r\n            setCurrentChapterIndex(parseInt(decodeURIComponent(String(searchParams.get(\"currentChapterIndex\")))));\r\n            currentChapterIndex = parseInt(decodeURIComponent(String(searchParams.get(\"currentChapterIndex\"))))\r\n        }\r\n        \r\n        const index = parseInt(String(currentChapterIndex))\r\n       \r\n        \r\n        if(aboutMangaObj.chapterList.length-(index+2) < 0){\r\n            navigate(-1);\r\n        }else{\r\n            toggleIsImagesLoaded(false)\r\n            // update history\r\n            const dataObj = {\r\n                title: aboutMangaObj.title,\r\n                src:getSrcFromLink(),\r\n                link: decodeURIComponent(String(searchParams.get(\"mangaLink\"))),\r\n                thumbLink:aboutMangaObj.thumb,\r\n                chapterIndex: aboutMangaObj.chapterList.length-(index+2)\r\n            }\r\n\r\n            const response = await fetch(backendUrl+'addToHistory',{\r\n                method: 'POST',\r\n                credentials:'include',\r\n                headers:{\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(dataObj)\r\n            })\r\n\r\n            if(response){\r\n                setCurrentChapterIndex(index + 1);\r\n                getMangaUrls(chapterList[index + 1].chapterLink);\r\n            }\r\n        }\r\n    }\r\n\r\n    const toggleReader = (e:React.MouseEvent| React.TouchEvent,type:string) => {\r\n        e.stopPropagation();\r\n        if(type === \"VERTICAL\"){\r\n            cookies.set('scrollType', 'Vertical', { path: '/' });\r\n            toggleScrollingVertical(true);\r\n        }else{\r\n            cookies.set('scrollType', 'Horizontal', { path: '/' });\r\n            const max = parseInt(String(imageCount))\r\n            for(let i=0; i<max ;i++){\r\n                refArrayOfImages.current.pop();\r\n            }\r\n            toggleScrollingVertical(false);\r\n        }\r\n    }\r\n\r\n    const handleScroll = async(e: React.UIEvent<HTMLDivElement>) =>{\r\n        const maxTop = 100;\r\n        const minTop = 87;\r\n        const getTopPercentage = (string:string) =>{\r\n            if(string.length == 4){\r\n                return parseInt(string.slice(0,3))\r\n            }else if(string.length == 3){\r\n                return parseInt(string.slice(0,2))\r\n            }else{\r\n                return parseInt(string.slice(0,1))\r\n            }\r\n        }\r\n\r\n        if(isScrollingVertical){\r\n            const div = e.target as HTMLDivElement;\r\n            const currentTick = div.scrollTop;\r\n            if(prevScrollTick < currentTick){\r\n                //move the bottom both menu out of view\r\n                if(bottomMenu.current){\r\n                    const currentTop = getTopPercentage(String(menuTop));\r\n                    if(currentTop <= maxTop){\r\n                        const newTop  = String(currentTop + 1) + \"%\";\r\n                        bottomMenu.current.style.top = newTop\r\n                        setMenuTop(newTop);\r\n                    }\r\n                    \r\n                }\r\n                if(topMenu.current){\r\n                    const maxTopTopMenu = -9;\r\n                    const currentTop = getTopPercentage(String(topMenuTop));\r\n                    if(currentTop > maxTopTopMenu){\r\n                        const newTop  = String(currentTop - 1) + \"%\";\r\n                        topMenu.current.style.top = newTop\r\n                        setTopMenuTop(newTop);\r\n                    }\r\n                }\r\n            }else{\r\n                //move menus into view\r\n                if(bottomMenu.current){\r\n                    const currentTop = getTopPercentage(String(menuTop));\r\n                    if(currentTop >= minTop){\r\n                        const newTop  = String(currentTop - 1) + \"%\";\r\n                        bottomMenu.current.style.top = newTop\r\n                        setMenuTop(newTop);\r\n                    }\r\n                    \r\n                }\r\n                if(topMenu.current){\r\n                    const maxTopTopMenu = 6;\r\n                    const currentTop = getTopPercentage(String(topMenuTop));\r\n                    if(currentTop < maxTopTopMenu){\r\n                        const newTop  = String(currentTop + 1) + \"%\";\r\n                        topMenu.current.style.top = newTop\r\n                        setTopMenuTop(newTop);\r\n                    }\r\n                }\r\n\r\n            }\r\n            setPrevScrollTick(currentTick);\r\n            if(currentTick === 0){\r\n                toggleIsScrollTop(true);\r\n                const maxTopTopMenu = 6;\r\n                let currentTop = getTopPercentage(String(topMenuTop));\r\n                while(true){\r\n                    if(topMenu.current){\r\n                        if(currentTop < maxTopTopMenu){\r\n                            currentTop++;\r\n                            const newTop  = String(currentTop) + \"%\";\r\n                            topMenu.current.style.top = newTop\r\n                            setTopMenuTop(newTop);\r\n                            await timer5ms(\"return\");\r\n                        }else{\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }else if(currentTick === div.scrollHeight - div.clientHeight){\r\n                toggleIsScrollTop(false);\r\n                const maxTopTopMenu = 2;\r\n                let currentTop = getTopPercentage(String(topMenuTop));\r\n                while(true){\r\n                    if(topMenu.current){\r\n                        if(currentTop < maxTopTopMenu){\r\n                            currentTop++;\r\n                            const newTop  = String(currentTop) + \"%\";\r\n                            topMenu.current.style.top = newTop\r\n                            setTopMenuTop(newTop);\r\n                            await timer5ms(\"return\");\r\n                        }else{\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleHorizontalScroll = async(type:string) => {\r\n        const maxRight =  parseInt(String(imageCount));\r\n\r\n        if(type === \"start\"){\r\n            currentCount = 0;\r\n            // set first image display true;\r\n            for(let i = 0 ; i < maxRight; i++){\r\n                let temp = refArrayOfImages.current[i];\r\n                if(temp){\r\n                    if(i !== 0)\r\n                        temp.style.display = 'none';\r\n                    else{\r\n                        temp.style.display = 'flex';\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }else if(type === \"right\"){\r\n            // next page\r\n\r\n            if(currentImage.current){\r\n                const count:number = parseInt(String(currentImageCount))\r\n                if(count < parseInt(String(imageCount)) - 1 ){\r\n                    setCurrentImageCount(count + 1);\r\n\r\n                }else{\r\n                    // load next chapter\r\n                    loadNextChapter(null);\r\n                }\r\n            }\r\n            \r\n        }else if(type === \"left\"){\r\n            // prev page\r\n            if(currentImage.current){\r\n                const count:number = parseInt(String(currentImageCount))\r\n                if(count >= 1 ){\r\n                    setCurrentImageCount(count - 1);\r\n\r\n                }else{\r\n                    // load prev chapter\r\n                    loadPrevChapter(null);\r\n                }\r\n\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const loadAboutManga = async() =>{\r\n        const url = decodeURIComponent(String(searchParams.get(\"mangaLink\")))\r\n        const response = await fetch(scaperUrl+'getMangaInfo',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'url': url\r\n            })\r\n        })\r\n        if(response.ok){\r\n            const jsonResp = await response.json();\r\n            if(jsonResp){\r\n                console.log(\"About manga loaded\")\r\n            }\r\n            store.dispatch(action_add_about_manga_object(jsonResp.mangaInfo));\r\n            getMangaUrls(decodeURIComponent(String(searchParams.get(\"link\"))));\r\n            setAboutMangaObject(jsonResp.mangaInfo);\r\n            toggleaboutMangaObjSet(true);\r\n            toggleGetImageCalled(true);\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"reader-outer-wrap\">\r\n            {\r\n                isScrollingVertical && isImagesLoaded && Object.keys(state).length !==0?\r\n                <div ref={topMenu} className=\"reader-top-menu-wrap\">\r\n                    <span onClick={(e)=>loadPrevChapter(e)} style={{display:`${isScrollTop?'flex':'None'}`}} className=\"reader-chapter-span-prev\">\r\n                        <span className=\"material-symbols-outlined\">\r\n                            keyboard_backspace\r\n                        </span>\r\n                        Previous Chapter\r\n                    </span>\r\n                    <span onClick={(e)=>loadNextChapter(e)} style={{display:`${isScrollTop?'None':'flex'}`}} className=\"reader-chapter-span-next\">\r\n                        Next Chapter\r\n                        <span className=\"material-symbols-outlined\">\r\n                            arrow_right_alt\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                :null\r\n            }\r\n            <div style={{display:`${isImagesLoaded && Object.keys(state).length !==0 ?\"none\":\"flex\"}` , opacity:`${isImagesLoaded?\"0\":\"1\"}`}} className=\"reader-fullscreen-loader\">\r\n                <div className=\"lds-roller\">\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div>  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div onScroll={(e)=>handleScroll(e)} style={{opacity:`${isImagesLoaded?\"1\":\"0\"}`}} className=\"reader-main-wrap\">\r\n            {\r\n                isScrollingVertical?\r\n                imageList.map((e:any,i:number)=>{\r\n                    return <img key={i} src={e.src}/>;\r\n                })\r\n                :\r\n                <div className=\"reader-image-carousel-wrap\">\r\n                    {\r\n                        <div className=\"reader-carousel-img-wrap\">\r\n                            <div className=\"touch-control-reader\">\r\n                                <div onClick={()=>handleHorizontalScroll(\"left\")} className=\"touch-control-left\"/>\r\n                                <div onClick={()=>handleHorizontalScroll(\"right\")} className=\"touch-control-right\"/>\r\n                            </div>\r\n                            {\r\n                                imageCount !== 0 ?\r\n                                <img ref={currentImage} src={imageList[parseInt(String(currentImageCount))].src}/>:null\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n            </div>\r\n            {\r\n                isImagesLoaded && Object.keys(state).length !==0 ? \r\n                <div ref={bottomMenu} className=\"reader-bottom-menu-wrap\">\r\n                    <span onClick={(e)=>goBack(e)} className=\"material-symbols-outlined\">\r\n                        arrow_back_ios\r\n                    </span>\r\n                    <span onClick={(e)=>toggleReader(e,'VERTICAL')} style={{color:`${isScrollingVertical? state.colorObj.highLightAccentColor: state.colorObj.accentColor}` }} className=\"material-symbols-outlined\">\r\n                        view_agenda\r\n                    </span>\r\n                    <span onClick={(e)=>toggleReader(e,'HORIZONTAL')} style={{color:`${isScrollingVertical? state.colorObj.accentColor: state.colorObj.highLightAccentColor}` }} className=\"material-symbols-outlined\">\r\n                        view_week\r\n                    </span>\r\n                </div>:null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state:any) {\r\n    return state;\r\n}\r\n\r\n\r\nexport default  connect(mapStateToProps)(ReaderComponent);","\nimport React, { useEffect, useState,useRef } from 'react';\nimport './App.css';\nimport { store } from './index';\nimport { connect } from 'react-redux';\nimport { Routes, Route, useNavigate,useLocation, createSearchParams } from \"react-router-dom\";\nimport {backendUrl,scaperUrl}  from './global';\nimport LoginComponent from './components/login/login';\nimport HomeComponent from './components/home/home';\nimport BookmarkComponent from './components/bookmarks/bookmarks';\nimport DashboardComponent from './components/dashboard/dashboard';\nimport SettingsComponent from './components/settings/settings';\nimport HistoryComponent from './components/history/history';\nimport GenreComponent from './components/genre/genre';\nimport AboutMangaComponent from './components/aboutManga/aboutManga';\nimport ReaderComponent from './components/reader/reader';\nimport { action_add_src_object,action_current_src } from './reducers/actions';\nimport isMobile from 'is-mobile';\n\n\nfunction App() {\n  let [isLoggedIn,toggleIsLoggedIn] = useState<React.SetStateAction<boolean>>(false);\n  let [isVerifyingLogin,toggleVerifyingLogin] = useState<React.SetStateAction<boolean>>(true);\n  let [isLoginVerified,toggleLoginVerify] = useState<React.SetStateAction<boolean>>(false);\n  let [isSrcSet,toggleIsSrcSet] = useState<React.SetStateAction<boolean>>(false);\n  let [isSrcObjectLoaded,toggleSrcObjectLoaded] = useState<React.SetStateAction<boolean>>(false);\n  let [isVerificationLoopSet,toggleVerificationLoop] = useState<React.SetStateAction<boolean>>(false);\n  \n\n\n  let [bgColor, setBgColor] = useState<React.SetStateAction<string>>('#21343e');\n  let [secondaryBgColor, setSecondaryBgColor] = useState<React.SetStateAction<string>>('#2f444d');\n  let [highLightBgColor, setHighlightBgColor] = useState<React.SetStateAction<string>>('#32606a');\n  let [accentColor, setAccentColor] = useState<React.SetStateAction<string>>('#6dc7ae');\n  let [highLightAccentColor, sethightLightAccentColor] = useState<React.SetStateAction<string>>('#54fff7');\n\n  let [aboutMangaUrl,setAboutMangaUrl] = useState<React.SetStateAction<string>>('');\n\n  let colorObj = {\n      bgColor: bgColor,\n      secondaryBgColor: secondaryBgColor,\n      highLightBgColor: highLightBgColor,\n      accentColor: accentColor,\n      highLightAccentColor: highLightAccentColor\n  }\n\n  const navigate = useNavigate();\n  let location = useLocation();\n  const fullScreenLoader = useRef<HTMLDivElement>(null);\n\n\n  const openAboutPage = (url:string) => {\n    // opens about manga page with url from child components\n    if(url.length !== 0){\n\n      const params = createSearchParams({\n        link: encodeURIComponent(url)\n      }).toString()\n      \n      url = 'home/manga?' + params\n      navigate(url,{state:{colorObj: colorObj}})\n    }\n\n  }\n\n  const getSrc = async() =>{\n    const resp = await fetch(backendUrl+'getSrc',{\n      method: 'POST',\n      credentials: 'include'\n    })\n    if(resp.ok){\n      const jsonResponse = await resp.json();\n      store.dispatch(action_current_src(jsonResponse.result.src))\n      const srcObjResponse = await getSrcObject();\n      if(srcObjResponse){\n        toggleSrcObjectLoaded(true)\n        store.dispatch(action_add_src_object(srcObjResponse));\n      }\n    }else{\n      console.log(\"ERROR_SETTING_SRC\")\n    }\n  }\n\n  const getSrcObject = async() =>{\n    const resp = await fetch(scaperUrl+'sourceList',{\n      method: 'GET',\n    })\n    if(resp.ok){\n      const jsonResponse = await resp.json();\n      return jsonResponse\n     \n    }else{\n      console.log(\"ERROR_SETTING_SRC_OBJECT\")\n    }\n  }\n\n  const verifyTokens = async() =>{\n    if(isLoginVerified === false){\n        toggleVerifyingLogin(true);\n    }\n    try {\n        const resp = await fetch(backendUrl+'verifyToken',{\n            method: 'GET',\n            credentials: 'include'\n        })\n        if(resp){\n            const jsonResponse = await resp.json();\n            if(jsonResponse){\n                toggleVerifyingLogin(false);\n                toggleLoginVerify(true)\n            }\n            let jsonResponseResult = jsonResponse.result;\n            if(jsonResponseResult === \"REFRESH_TOKEN_INVALID\"){\n                //logout\n                toggleVerifyingLogin(false);\n                toggleIsLoggedIn(false)\n            }else if(jsonResponseResult === \"ACCESS_TOKEN_REFRESH\"){\n                console.log(\"Silent Refresh\")\n                toggleVerifyingLogin(false);\n            }else if(jsonResponseResult === \"NO_TOKENS_FOUND\"){\n                toggleIsLoggedIn(false)\n            }else if(jsonResponseResult ===\"USERNAME_FOUND\"){\n                // login logic\n                document.cookie =  `username=${jsonResponse.username}`;\n                toggleIsLoggedIn(true)\n            }\n        }\n    } catch (error) {\n        console.log(error);\n        toggleLoginVerify(true)\n        toggleVerifyingLogin(false);\n    }\n  }\n\n  useEffect(()=>{\n    console.log(location.pathname)\n    if(isLoginVerified === false){\n      verifyTokens();\n    }else{\n      if(isLoggedIn === true){\n        if(isSrcSet === false){\n          getSrc();\n          toggleIsSrcSet(true);\n        }else{\n          if(!location.pathname.includes('/home')){\n            navigate(\"/home/dashboard\", { replace: true });\n            // togglePreventNavigation(true)\n          }\n        }\n      }else{\n        if(location.pathname !== '/'){\n          navigate(\"/\", { replace: true });\n        }\n      }\n      //verify tokens every 10 mins\n      if(isVerificationLoopSet === false){\n        setInterval(()=>verifyTokens(),600000);\n        toggleVerificationLoop(true);\n      }\n    }\n  })\n  return (\n    <div className=\"App scroll-fix\">\n      {\n        isMobile()?null:\n        <div className=\"showUnderDev\">\n        <img src=\"https://www.fas10.in/wp-content/uploads/2021/04/underdevelpoment.png\" alt=\"\" />\n        </div>\n\n      }\n      { isVerifyingLogin && isSrcObjectLoaded ?\n          <div ref={fullScreenLoader} style={{background:String(bgColor)}} className=\"full-screen-loading\">\n            <div className=\"lds-roller\">\n              <div>\n              </div>\n              <div>\n              </div>\n              <div>\n              </div>\n              <div>\n              </div>\n              <div>\n              </div>\n              <div>\n              </div>\n              <div>\n              </div>\n              <div>  \n              </div>\n            </div>\n          </div>\n        : null\n      }\n      <Routes>\n        \n        { \n          isLoggedIn === false? \n            <Route path=\"/\" element={<LoginComponent isLoginVerified={isLoginVerified} verifyTokens ={ verifyTokens} />} />\n          :\n            <Route path=\"/home/*\" element={<HomeComponent getColors={colorObj} isLoginVerified={isLoginVerified} verifyTokens ={ verifyTokens} />}>\n              <Route path=\"bookmarks\" element={<BookmarkComponent  openAboutPage={openAboutPage} getColors={colorObj}/>}/>\n              <Route path=\"genre\" element={<GenreComponent openAboutPage={openAboutPage} getColors={colorObj}/>}/>\n              <Route path=\"dashboard\" element={<DashboardComponent openAboutPage={openAboutPage} getColors={colorObj}/>}/>\n              <Route path=\"settings\" element={<SettingsComponent getColors={colorObj} verifyTokens ={verifyTokens}/>}/>\n              <Route path=\"history\" element={<HistoryComponent openAboutPage={openAboutPage} getColors={colorObj}/>}/>\n              <Route path=\"manga\" element={<AboutMangaComponent/>}/>\n              <Route path=\"manga/read\" element={<ReaderComponent/>}/>\n            </Route>\n        }\n        \n      </Routes>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state:any) {\n  return state;\n}\n\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n\n\nfunction aboutMangaObject(state = {}, action:any) {\n    switch (action.type) {\n        case 'ADD_ABOUT_MANGA_OBJECT':\n            return (action.state)\n        default:\n            return state;\n    }\n}\n\nfunction dashBoardObject(state = {}, action:any) {\n    switch (action.type) {\n        case 'ADD_DASHBOARD_OBJECT':\n            return (action.state)\n        default:\n            return state;\n    }\n}\n\nfunction srcObject(state = {}, action:any) {\n    switch (action.type) {\n        case 'ADD_SRC_OBJECT':\n            return (action.state)\n        default:\n            return state;\n    }\n}\n\nfunction currentSrc(state = '', action:any){\n    switch (action.type) {\n        case 'CURRENT_SRC':\n            return (action.state)\n        default:\n            return state;\n    }\n}\n\n\nfunction genreObject(state = {}, action:any){\n    switch (action.type) {\n        case 'ADD_GENRE_OBJECT':\n            return (action.state)\n        default:\n            return state;\n    }\n}\n\nfunction genreSearchObject(state = {}, action:any){\n    switch (action.type) {\n        case 'ADD_GENRE_SEARCH_OBJECT':\n            return (action.state)\n        default:\n            return state;\n    }\n}\n\nfunction genreSearchTick(state = 0, action:any){\n    switch (action.type) {\n        case 'UPDATE_GENRE_SEARCH_SCROLL_TICK':\n            return (action.state)\n        default:\n            return state;\n    }\n}\n\nfunction genrePageNo(state = 0, action:any){\n    switch (action.type) {\n        case 'UPDATE_GENRE_PAGE_NO':\n            return (action.state)\n        default:\n            return state;\n    }\n}\n\nfunction selectedGenreArray(state = [], action:any){\n    switch (action.type) {\n        case 'UPDATE_SELECTED_GENRE':\n            return (action.state)\n        default:\n            return state;\n    }\n}\n\n\n\nfunction genreSort(state = \"default\", action:any){\n    switch (action.type) {\n        case 'UPDATE_GENRE_SORT':\n            return (action.state)\n        default:\n            return state;\n    }\n}\n\n\nconst rootReducer = combineReducers({\n    aboutMangaObject,\n    dashBoardObject,\n    srcObject,\n    currentSrc,\n    genreObject,\n    genreSort,\n    genreSearchObject,\n    genreSearchTick,\n    genrePageNo,\n    selectedGenreArray\n});\n\nexport default rootReducer","import React from 'react';\nimport { Provider } from 'react-redux'\n// import ReactDOM from 'react-dom';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './configureStore';\nimport { BrowserRouter } from \"react-router-dom\";\n\nexport const store = configureStore()\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nconst routerBaseName = 'akari-react/';\n\nroot.render(\n  <BrowserRouter basename={routerBaseName}>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  </BrowserRouter>,\n);\n\nserviceWorkerRegistration.unregister();\n\nreportWebVitals();\n","import { createStore,applyMiddleware, compose } from 'redux'\nimport rootReducer from './reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nexport default function configureStore(){\n    // const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    \n    const store = createStore(rootReducer,{},composeWithDevTools())\n    return store\n}"],"sourceRoot":""}